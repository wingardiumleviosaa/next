<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DataEngineering on UlaGraphy</title><link>https://ulagraphy.netlify.com/categories/dataengineering/</link><description>Recent content in DataEngineering on UlaGraphy</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 19 May 2022 11:15:00 +0000</lastBuildDate><atom:link href="https://ulagraphy.netlify.com/categories/dataengineering/rss.xml" rel="self" type="application/rss+xml"/><item><title>MongoDB 一次為舊有資料加上新增欄位</title><link>https://ulagraphy.netlify.com/post/database-mongodb-update-the-document/mongodb-update-new-field-to-old-document/</link><pubDate>Thu, 19 May 2022 11:15:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/database-mongodb-update-the-document/mongodb-update-new-field-to-old-document/</guid><description/></item><item><title>在 Kubernetes 上佈署 MongoDB</title><link>https://ulagraphy.netlify.com/post/database-mongodb-intro/install-mongodb-on-kubernetes/</link><pubDate>Wed, 20 Apr 2022 19:59:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/database-mongodb-intro/install-mongodb-on-kubernetes/</guid><description>&lt;p>紀錄一下 mongodb 的 kubernetes 佈署檔，分為 standalone 以及 replica set，會宣告 persistent volume 以儲存永久性資料 (如 database 資料、index 以及設定檔)。&lt;/p></description></item><item><title>Debezium 1.5 snapshot.mode schema_only not work</title><link>https://ulagraphy.netlify.com/post/data-debezium-1.5-snapshot-mode-schema-only-not-work/debezium-snapshot-mode-schema-only-not-work/</link><pubDate>Tue, 22 Mar 2022 14:21:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-debezium-1.5-snapshot-mode-schema-only-not-work/debezium-snapshot-mode-schema-only-not-work/</guid><description>&lt;p>使用 Debezium 1.5 連上 connector 後，發現資料會從資料表的最舊資料一筆資料開始送，查官網後發現有 &lt;code>snapshot.mode&lt;/code> 的參數可以設置，但設置完畢後卻發現有 error，本篇記錄解法。&lt;/p></description></item><item><title>安裝監聽於所有 namespace 的 strimzi kafka operator, 便於在不同 namespace 下安裝不同座 Kafka cluster</title><link>https://ulagraphy.netlify.com/post/data-install-strimzi-kafka-operator-to-watch-all-namespace/install-strimzi-kafka-operator-to-watch-all-namespace/</link><pubDate>Mon, 21 Mar 2022 22:33:25 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-install-strimzi-kafka-operator-to-watch-all-namespace/install-strimzi-kafka-operator-to-watch-all-namespace/</guid><description>&lt;p>以下紀錄如何隔離 kafka operator 與建立的 kafka cluster 的命名空間，預計是可以在一座 kubernetes cluster 上只需安裝一個 kafka operator 來建立多個 kafka cluster。&lt;/p></description></item><item><title>Mongodb 可能是讓機器 OOM crash 的元兇 ?!</title><link>https://ulagraphy.netlify.com/post/database-mongodb-oom-crash/mongodb-oom-crash/</link><pubDate>Mon, 14 Mar 2022 19:53:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/database-mongodb-oom-crash/mongodb-oom-crash/</guid><description>&lt;h2 id="問題">問題
&lt;a class="header-anchor" href="#%e5%95%8f%e9%a1%8c">&lt;/a>
&lt;/h2>&lt;p>手上有三台各有 160GB 的機器，但卻會在跑一段時間後輪流死當。觀察記憶體消耗之後，發現兇手就是 MongoDB!!!&lt;/p></description></item><item><title>使用 docker compose 安裝 kafka</title><link>https://ulagraphy.netlify.com/post/data-install-kafka-by-docker-compose/install-kafka-by-docker-compose/</link><pubDate>Wed, 09 Mar 2022 21:54:12 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-install-kafka-by-docker-compose/install-kafka-by-docker-compose/</guid><description>&lt;h2 id="安裝單節點-kafka">安裝單節點 Kafka
&lt;a class="header-anchor" href="#%e5%ae%89%e8%a3%9d%e5%96%ae%e7%af%80%e9%bb%9e-kafka">&lt;/a>
&lt;/h2>&lt;h3 id="1-準備-docker-composeyaml-檔案">1. 準備 docker-compose.yaml 檔案
&lt;a class="header-anchor" href="#1-%e6%ba%96%e5%82%99-docker-composeyaml-%e6%aa%94%e6%a1%88">&lt;/a>
&lt;/h3></description></item><item><title>[Oracle] Install Oracle 11g XE and Establish CDC by Debezium</title><link>https://ulagraphy.netlify.com/post/data-oracle-11g-xe-cdc-debezium/install-oracle-11g-and-establish-cdc-by-debezium/</link><pubDate>Wed, 19 Jan 2022 11:03:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-oracle-11g-xe-cdc-debezium/install-oracle-11g-and-establish-cdc-by-debezium/</guid><description>&lt;h2 id="debezium">Debezium
&lt;a class="header-anchor" href="#debezium">&lt;/a>
&lt;/h2>&lt;h3 id="簡介">簡介
&lt;a class="header-anchor" href="#%e7%b0%a1%e4%bb%8b">&lt;/a>
&lt;/h3>&lt;p>Debezium 是一個由 RedHat 開源的基於資料庫變更日誌的實時變更數據捕獲（CDC）工具，構建在 Apache Kafka 之上，是 Apache Kafka Connect 的 Source Connector，可以實時獲取行級別（row-level）資料的更改事件（INSERT、UPDATE 和 DELETE）並同步到 Kafka。目前支援的常見資料庫有 MySQL(binlog)、Oracle(logminer or xstream)、MongoDB(change streams)、PostgreSQL(logical replication stream mode)、SQL Server(transaction log)&amp;hellip;等。本文範例是使用 Oracle 的 logminer 日誌透過 Debezium 獲取指定資料庫的變更事件。&lt;/p></description></item><item><title>Data Pipeline 意義、要解決什麼、應具備的功能</title><link>https://ulagraphy.netlify.com/post/data-datapipeline-definition/what-is-data-pipeline/</link><pubDate>Thu, 07 Oct 2021 15:32:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-datapipeline-definition/what-is-data-pipeline/</guid><description>&lt;h2 id="意義">意義
&lt;a class="header-anchor" href="#%e6%84%8f%e7%be%a9">&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>數據管道（Data Pipeline）是一種允許數據通過數據分析過程&lt;span style="background-color:#FCF3CF">從一個位置高效流向另一個位置的軟體，是處理資料流的系統。&lt;/span>這就好比一條傳送帶，它能高效、準確地將數據傳送到流程的每一步。&lt;/li>
&lt;/ul></description></item><item><title>[nifi] Consume Kafka Topic and Put to MongoDB</title><link>https://ulagraphy.netlify.com/post/data-nifi-consume-kafka-and-put-to-mongodb/nifi-consume-kafka/</link><pubDate>Fri, 03 Sep 2021 15:13:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-nifi-consume-kafka-and-put-to-mongodb/nifi-consume-kafka/</guid><description>&lt;p>這個範例將示範消費指定的 kafka topic，並寫進指定的 MongoDB。&lt;/p></description></item><item><title>[RabbitMQ] 在 K8s cluster 上安裝叢集</title><link>https://ulagraphy.netlify.com/post/data-rabbitmq-installation-on-k8s/rabbitmq-on-k8s/</link><pubDate>Wed, 30 Dec 2020 17:31:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-rabbitmq-installation-on-k8s/rabbitmq-on-k8s/</guid><description>&lt;h2 id="先決條件">先決條件
&lt;a class="header-anchor" href="#%e5%85%88%e6%b1%ba%e6%a2%9d%e4%bb%b6">&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>kubernetes 1.17 版以上&lt;/li>
&lt;li>RabbitMQ image 3.8.8+&lt;/li>
&lt;/ul></description></item><item><title>[MongoDB] 無法使用 replicaSet 連線問題</title><link>https://ulagraphy.netlify.com/post/database-mongodb-cannot-connect-with-replicaset/mongodb-replicaset-connection-failed/</link><pubDate>Sun, 20 Dec 2020 20:07:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/database-mongodb-cannot-connect-with-replicaset/mongodb-replicaset-connection-failed/</guid><description>&lt;h2 id="前言">前言
&lt;a class="header-anchor" href="#%e5%89%8d%e8%a8%80">&lt;/a>
&lt;/h2>&lt;p>用 docker 跑三個 mongoDB 的 container，做成 replica set cluster。但卻遇到從外面的 shell (跑在本機或其他 server) 加上 replica set 的名字時無法連線的問題 (&lt;code>mongo --host myReplica/mongo1&lt;/code> 失敗)。而不加 replica set 卻都能成功連線 (&lt;code>mongo --host mongo1:30001&lt;/code> 成功)。&lt;/p></description></item><item><title>[MongoDB] Install MongoDB Shell</title><link>https://ulagraphy.netlify.com/post/database-mongodb-install-shell-only/mongodb-install-shell/</link><pubDate>Sun, 20 Dec 2020 20:03:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/database-mongodb-install-shell-only/mongodb-install-shell/</guid><description>&lt;h2 id="install-mongo-shell-only-on-linux">Install Mongo Shell Only on Linux
&lt;a class="header-anchor" href="#install-mongo-shell-only-on-linux">&lt;/a>
&lt;/h2>&lt;p>mongo shell 已經包含在 MongoDB 服務器中。如果已經安裝了 DB，則 mongo shell 將安裝在與服務器 binary 文件相同的位置。 但如果只想從 MongoDB 服務器外單獨下載 mongo shell，可以按照以下步驟將 shell 作為獨立程序安裝：&lt;/p></description></item><item><title>[MongoDB] Install MongoDB Replica Set with Docker</title><link>https://ulagraphy.netlify.com/post/database-mongodb-install-monogodb-replicaset-with-docker/mongodb-install-db-replicaset-with-docker/</link><pubDate>Tue, 15 Dec 2020 22:09:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/database-mongodb-install-monogodb-replicaset-with-docker/mongodb-install-db-replicaset-with-docker/</guid><description>&lt;h2 id="replica-set-installation">Replica Set Installation
&lt;a class="header-anchor" href="#replica-set-installation">&lt;/a>
&lt;/h2>&lt;h3 id="pre-requisties">Pre-requisties
&lt;a class="header-anchor" href="#pre-requisties">&lt;/a>
&lt;/h3>&lt;p>確認是否安裝 Docker，並確認 docker daemon 是否有跑起來&lt;/p></description></item><item><title>[MongoDB] Introduction and Installation on Bare Metal</title><link>https://ulagraphy.netlify.com/post/database-mongodb-intro-and-install-on-baremetal/mongodb-introduction-and-installation/</link><pubDate>Tue, 15 Dec 2020 21:55:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/database-mongodb-intro-and-install-on-baremetal/mongodb-introduction-and-installation/</guid><description>&lt;p>文件導向式(document-oriented)資料庫，儲存文件（document）或物件（object），沒有 row 的概念，取而代之的是 document。&lt;/p></description></item><item><title>Real-time &amp; Streaming &amp; Batch</title><link>https://ulagraphy.netlify.com/post/data-realtime-streamming-batch/realtime-streaming-and-batch/</link><pubDate>Tue, 06 Oct 2020 15:08:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-realtime-streamming-batch/realtime-streaming-and-batch/</guid><description/></item><item><title>[Kafka] server - client &amp; client - server SSL 加密</title><link>https://ulagraphy.netlify.com/post/data-kafka-ssl-encryption/kafka-ssl-encryption/</link><pubDate>Fri, 04 Sep 2020 12:00:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-kafka-ssl-encryption/kafka-ssl-encryption/</guid><description>&lt;p>Kafka 目前支持 SSL、SASL/Kerberos、SASL/PLAIN 三種認證機制，這篇文章將紀錄如何在 Kafka broker 與 clinet 端建立 TLS/SSL 連線。&lt;/p></description></item><item><title>[Zookeeper] Encryption - node-node &amp; client-node</title><link>https://ulagraphy.netlify.com/post/data-zookeeper-encryption3/zookeeper-encryption-3/</link><pubDate>Sun, 30 Aug 2020 10:10:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-zookeeper-encryption3/zookeeper-encryption-3/</guid><description>&lt;h2 id="node-node-encryption">Node-Node Encryption
&lt;a class="header-anchor" href="#node-node-encryption">&lt;/a>
&lt;/h2>&lt;p>節點到節點加密使用 SSL 保護 ZooKeeper server 間的內部連接，加密完全在 ZooKeeper 節點之間完成。默認情況下，Quorom TLS 是禁用的，必須通過編輯所有 server 中的 &lt;code>zoo.cfg&lt;/code> 文件來啟用：&lt;/p></description></item><item><title>[Zookeeper] Encryption - 產生 CA-signed 金鑰</title><link>https://ulagraphy.netlify.com/post/data-zookeeper-encryption2/zookeeper-encryption-2/</link><pubDate>Sun, 30 Aug 2020 09:47:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-zookeeper-encryption2/zookeeper-encryption-2/</guid><description>&lt;h2 id="產生-ca-加簽金鑰">產生 CA 加簽金鑰
&lt;a class="header-anchor" href="#%e7%94%a2%e7%94%9f-ca-%e5%8a%a0%e7%b0%bd%e9%87%91%e9%91%b0">&lt;/a>
&lt;/h2>&lt;ol>
&lt;li>產生 CA 金鑰憑證
在隨意一台機器上產生 CA 憑證，用於為其他金鑰加簽。&lt;/li>
&lt;/ol></description></item><item><title>[Zookeeper] Encryption - 產生 self-signed 金鑰</title><link>https://ulagraphy.netlify.com/post/data-zookeeper-encryption1/zookeeper-encryption-1/</link><pubDate>Sun, 30 Aug 2020 09:38:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-zookeeper-encryption1/zookeeper-encryption-1/</guid><description>&lt;p>Netty 是一個基於 NIO 的 client/server 通信框架，它通過直接使用 NIO 簡化了 Java 應用程序的 network level 通信的複雜度。 此外，Netty 框架內置了對加密（SSL）和身份驗證（CA）的支持。 這些是可選功能，可以單獨打開或關閉。&lt;/p></description></item><item><title>[Kafka] 新增 broker 節點並平衡 topic</title><link>https://ulagraphy.netlify.com/post/data-kafka-topic-rebalancing/kafka-add-broker-and-balance-topic/</link><pubDate>Mon, 24 Aug 2020 14:10:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-kafka-topic-rebalancing/kafka-add-broker-and-balance-topic/</guid><description>&lt;p>在 Kafka 集群中增加 broker 非常方便，只需為其分配唯一的 broker ID，指定集群使用的 zookeeper connect 位址，然後在新服務器上啟動 Kafka。但是，&lt;strong>舊有的 Topic 不會將 Partition 均勻分配到新的節點上，進而造成數據不平衡。&lt;/strong> 因此需要將一些現有數據遷移到這些新機器上進行 rebalancing。&lt;/p>
&lt;p>Kafka 提供了 &lt;code>kafka-reassign-partitions.sh&lt;/code> 工具來進行手動平均分配：&lt;/p></description></item><item><title>[Zookeeper] Dynamic Configuration</title><link>https://ulagraphy.netlify.com/post/data-zookeeper-dynamic-configuration/zookeeper-dynamic-configuration/</link><pubDate>Wed, 12 Aug 2020 22:10:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-zookeeper-dynamic-configuration/zookeeper-dynamic-configuration/</guid><description>&lt;p>Zookeeper 在 3.5.0 版發行後，支持動態新增節點，不需將整個集群重啟。這篇文章主要紀錄 dymamic configuration 如何實作。&lt;/p></description></item><item><title>[Zookeeper] ACL</title><link>https://ulagraphy.netlify.com/post/data-zookeeper-acl/zookeeper-acl/</link><pubDate>Wed, 12 Aug 2020 20:45:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-zookeeper-acl/zookeeper-acl/</guid><description>&lt;h2 id="aclaccess-control-list">ACL(Access Control List)
&lt;a class="header-anchor" href="#aclaccess-control-list">&lt;/a>
&lt;/h2>&lt;p>Zookeeper 對 znode 操作採用 ACL 進行了存取權限控制，類似於UNIX/Linux的文件權限機制。使用 scheme:id:perm 來標識，主要涵蓋 3 個方面：&lt;/p></description></item><item><title>[Hadoop] HDFS、MapReduce、Yarn 介紹</title><link>https://ulagraphy.netlify.com/post/data-hadoop-intro/hadoop-introduction/</link><pubDate>Wed, 12 Aug 2020 14:32:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-hadoop-intro/hadoop-introduction/</guid><description>&lt;p>Hadoop 是一個能夠儲存並管理大量資料的分散式大數據處理平臺，其包含三大模組：&lt;/p>
&lt;ul>
&lt;li>HDFS&lt;/li>
&lt;li>MapReduce&lt;/li>
&lt;li>Yarn&lt;/li>
&lt;/ul></description></item><item><title>[MySQL] 在 Ubuntu18.04 建立 MySQL NDB Cluster 8.0</title><link>https://ulagraphy.netlify.com/post/database-mysql-ndb-cluster8-on-ubuntu/mysql-ndb-cluster/</link><pubDate>Tue, 11 Aug 2020 11:51:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/database-mysql-ndb-cluster8-on-ubuntu/mysql-ndb-cluster/</guid><description>&lt;h2 id="mysql-ndb-cluster">MySQL NDB Cluster
&lt;a class="header-anchor" href="#mysql-ndb-cluster">&lt;/a>
&lt;/h2>&lt;p>MySQL cluster 將標準的 MySQL server 與內存中叢集式儲存引擎 NDB 集成起來，允許在多個無共享的系統中部署「內存中」資料庫的叢集。&lt;/p></description></item><item><title>[Zookeeper] fsync &amp; EndOfStreamException 導致 zookeeper shutdown</title><link>https://ulagraphy.netlify.com/post/data-zookeeper-endofstreamexception-error/zookeeper-endofstreamexception/</link><pubDate>Fri, 31 Jul 2020 14:50:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-zookeeper-endofstreamexception-error/zookeeper-endofstreamexception/</guid><description>&lt;h2 id="問題">問題
&lt;a class="header-anchor" href="#%e5%95%8f%e9%a1%8c">&lt;/a>
&lt;/h2>&lt;p>Zookeeper 及 Kafka 在參數保持預設的狀況下，做壓力測試時 Zookeeper 會發生以下錯誤訊息：&lt;/p></description></item><item><title>[Kafka] 建立 Kafka Cluster</title><link>https://ulagraphy.netlify.com/post/data-kafka-cluster/kafka-cluster/</link><pubDate>Wed, 10 Jun 2020 20:52:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-kafka-cluster/kafka-cluster/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span>$ cd /opt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span>$ wget &lt;span style="color:#e6db74">&amp;#34;http://ftp.tc.edu.tw/pub/Apache/kafka/2.4.1/kafka_2.12-2.4.1.tgz&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>&lt;span>$ sudo tar zxvf kafka_2.12-2.4.1.tgz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span>&lt;span>$ sudo mv kafka_2.12-2.4.1 kafka
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[Kafka] Kafka at a Glance</title><link>https://ulagraphy.netlify.com/post/data-kafka-intro/kafka-at-glance/</link><pubDate>Tue, 09 Jun 2020 10:43:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-kafka-intro/kafka-at-glance/</guid><description>&lt;p>Kafka 是由 LinkedIn 開發而後釋出給 Apache 的一個開源 streaming message queue (消息佇列)，由Scala和Java編寫，目前是 Hadoop ecosystem 中的一員。&lt;/p></description></item><item><title>[Zookeeper] 建立 Zookeeper Cluster</title><link>https://ulagraphy.netlify.com/post/data-build-zookeeper-cluster/zookeeper-build-cluster/</link><pubDate>Thu, 30 Apr 2020 20:55:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-build-zookeeper-cluster/zookeeper-build-cluster/</guid><description>&lt;p>Zookeeper 提供分散式應用程式中的協調服務，是 Hadoop 生態系產品中不可或缺的角色。
Zookeeper 叢集適合搭建在奇數臺機器上，目的是為了提高可用性以及維持選舉制度的運行。[1]&lt;/p></description></item></channel></rss>