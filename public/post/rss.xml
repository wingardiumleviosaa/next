<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on UlaGraphy</title><link>https://ulagraphy.netlify.com/post/</link><description>Recent content in Posts on UlaGraphy</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 23 Jul 2023 17:45:00 +0800</lastBuildDate><atom:link href="https://ulagraphy.netlify.com/post/rss.xml" rel="self" type="application/rss+xml"/><item><title>[Ingress] 指定了 TLS 憑證，卻吃到不正確的</title><link>https://ulagraphy.netlify.com/post/k8s-ssl-not-eat-right/</link><pubDate>Sun, 23 Jul 2023 17:45:00 +0800</pubDate><guid>https://ulagraphy.netlify.com/post/k8s-ssl-not-eat-right/</guid><description>&lt;h2 id="tl-dr">TL; DR
&lt;a class="header-anchor" href="#tl-dr">&lt;/a>
&lt;/h2>&lt;p>在公司部屬 Ingress 資源後，發現一直沒法法吃到指定的憑證，結果才發現是因為 wildcard 的問題。&lt;/p></description></item><item><title>DNS and FQDN</title><link>https://ulagraphy.netlify.com/post/network-dns-and-fqdn/network-dns-and-fqdn/</link><pubDate>Sun, 23 Jul 2023 14:26:00 +0800</pubDate><guid>https://ulagraphy.netlify.com/post/network-dns-and-fqdn/network-dns-and-fqdn/</guid><description>&lt;h2 id="fqdn">FQDN
&lt;a class="header-anchor" href="#fqdn">&lt;/a>
&lt;/h2>&lt;p>Fully Qualified Domain Name，是網際網路上特定計算機或主機的完整域名。&lt;/p></description></item><item><title>終於正式搬到 Hugo 了!!</title><link>https://ulagraphy.netlify.com/post/blog-final-hugo-migration/</link><pubDate>Tue, 06 Jun 2023 23:30:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/blog-final-hugo-migration/</guid><description>&lt;p>&lt;img src="https://ulagraphy.netlify.com/imgs/img-lazy-loading.gif" data-src="./cover.jpg" alt="" />&lt;/p>
&lt;h2 id="tl-dr">TL; DR
&lt;a class="header-anchor" href="#tl-dr">&lt;/a>
&lt;/h2>&lt;p>本來以為今年的工作不會變動，殊不知在四月底突然有了新的機會，趁著一個禮拜的 gap week，來把一直想換很久的技術部落格換掉。&lt;/p></description></item><item><title>[Golang &amp; Node.js] Access Kubernetes Out of the Cluster</title><link>https://ulagraphy.netlify.com/post/golang-and-nodejs-client-access-k8s/</link><pubDate>Mon, 05 Jun 2023 17:19:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/golang-and-nodejs-client-access-k8s/</guid><description/></item><item><title>[Golang] Render Image in HTML</title><link>https://ulagraphy.netlify.com/post/golang-render-img-in-html/</link><pubDate>Mon, 05 Jun 2023 16:19:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/golang-render-img-in-html/</guid><description>&lt;h2 id="tldr">TL;DR
&lt;a class="header-anchor" href="#tldr">&lt;/a>
&lt;/h2>&lt;p>紀錄怎麼在 golang 的 gin api server 回傳帶有圖片的 api。&lt;/p></description></item><item><title>[Terrascan] init with connect to github error</title><link>https://ulagraphy.netlify.com/post/terrascan-init-with-connect-to-github-error/</link><pubDate>Tue, 14 Mar 2023 21:10:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/terrascan-init-with-connect-to-github-error/</guid><description>&lt;h2 id="tldr">TL;DR
&lt;a class="header-anchor" href="#tldr">&lt;/a>
&lt;/h2>&lt;p>在使用 terrascan 當作 IAC 語法檢查工具時，發現跑在公司內部環境的 gitlab pipeline 都會卡在 terrascan init 的錯誤。&lt;/p></description></item><item><title>[Azure] 使用 Vault Secrets API 如何取得超過 25 筆後的資料</title><link>https://ulagraphy.netlify.com/post/get-azure-vault-secret-for-all/</link><pubDate>Sat, 18 Feb 2023 16:32:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/get-azure-vault-secret-for-all/</guid><description>&lt;h2 id="tl-dr">TL; DR
&lt;a class="header-anchor" href="#tl-dr">&lt;/a>
&lt;/h2>&lt;p>使用 Azure key vault 的 API Get 所有 secrets 時可以利用 &lt;code>maxresults&lt;/code> 的參數限制回傳的筆數，預設為 25 筆，但經測試，最大的顯示筆數也就是 25 筆了，要如何取得全部的 secrets 呢? 以此篇記錄。&lt;/p></description></item><item><title>[Azure] 透過 Managment API 建立訂閱帳戶</title><link>https://ulagraphy.netlify.com/post/create-subscription-by-azure-mgmt-api-and-spn/</link><pubDate>Tue, 14 Feb 2023 16:32:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/create-subscription-by-azure-mgmt-api-and-spn/</guid><description>&lt;h2 id="tldr">TL;DR
&lt;a class="header-anchor" href="#tldr">&lt;/a>
&lt;/h2>&lt;p>本篇文章記錄透過 Azure Management API 使用 Azure Service Principal 權限授權，建立 Billing Account 類型為 Enterprise Agreement 的 Subscription 訂閱帳戶。&lt;/p></description></item><item><title>[Golang] 使用 winrm 下多行指令操作遠端機器</title><link>https://ulagraphy.netlify.com/post/golang-winrm-multiple-command-sample-code/</link><pubDate>Sat, 28 Jan 2023 08:19:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/golang-winrm-multiple-command-sample-code/</guid><description>&lt;h2 id="tl-dr">TL; DR
&lt;a class="header-anchor" href="#tl-dr">&lt;/a>
&lt;/h2>&lt;p>使用
&lt;a href="https://github.com/masterzen/winrm" title="masterzen/winrm" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
masterzen/winrm
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a> 套件透過 winrm protocal 遠端連線至指定機器並下 powershell 指令操作。&lt;/p></description></item><item><title>[Windows] 使用 winrm 遠端連線到其他主機</title><link>https://ulagraphy.netlify.com/post/win10-winrm-to-remote-host/</link><pubDate>Thu, 12 Jan 2023 11:06:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/win10-winrm-to-remote-host/</guid><description/></item><item><title>[Windows] 使用 openssh 連線到其他主機</title><link>https://ulagraphy.netlify.com/post/os-win10-openssh/win10-openssh/</link><pubDate>Tue, 10 Jan 2023 10:13:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/os-win10-openssh/win10-openssh/</guid><description/></item><item><title>[Docker] 在 wsl docker 出現 exec no such file or directory 錯誤</title><link>https://ulagraphy.netlify.com/post/docker-exec-no-such-file-or-directory-in-wsl/</link><pubDate>Wed, 28 Dec 2022 20:22:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/docker-exec-no-such-file-or-directory-in-wsl/</guid><description>&lt;h2 id="tldr">TL;DR
&lt;a class="header-anchor" href="#tldr">&lt;/a>
&lt;/h2>&lt;p>在 windows 環境下 build docker image 並跑 container 時會出現 &lt;code>exec xxx no such file or directory&lt;/code> 的錯誤，但明明使用同樣的 dockerfile 在 linux 環境卻沒問題。&lt;/p></description></item><item><title>[Node.js] 使用 NodeMailer 發送信件</title><link>https://ulagraphy.netlify.com/post/node-send-mail-by-nodemailer/</link><pubDate>Sun, 18 Dec 2022 19:52:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/node-send-mail-by-nodemailer/</guid><description>&lt;h2 id="tldr">TL;DR
&lt;a class="header-anchor" href="#tldr">&lt;/a>
&lt;/h2>&lt;p>在本地端透過 nodemailer 寄送郵件時，發現預設的 25 port 會有 &lt;code>connect ECONNREFUSED&lt;/code> 的錯誤無法傳送。&lt;/p></description></item><item><title>[PowerShell] 一次分割所有硬碟</title><link>https://ulagraphy.netlify.com/post/powershell-partition-and-format-all-disk-at-once/</link><pubDate>Sat, 19 Nov 2022 21:18:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/powershell-partition-and-format-all-disk-at-once/</guid><description>&lt;h2 id="get-disk">Get-Disk
&lt;a class="header-anchor" href="#get-disk">&lt;/a>
&lt;/h2>&lt;p>取得當前連接到 win10 的所有硬碟&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span>Get-Disk
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>CronJob to Run the Job (alpine base image) at the Last Sunday of the Month</title><link>https://ulagraphy.netlify.com/post/k8s-cronjob-run-job-alpine-at-last-sunday-of-the-month/cronjob-for-last-day-of-the-month-using-kubernetes/</link><pubDate>Sun, 23 Oct 2022 19:08:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/k8s-cronjob-run-job-alpine-at-last-sunday-of-the-month/cronjob-for-last-day-of-the-month-using-kubernetes/</guid><description>&lt;h2 id="tldr">TL;DR
&lt;a class="header-anchor" href="#tldr">&lt;/a>
&lt;/h2>&lt;p>本篇文章記錄如何在 aplpine base 的 container 中於每月的最後一個禮拜日執行指定任務。&lt;/p></description></item><item><title>Minikube Pull Image from Private Repository in WSL2</title><link>https://ulagraphy.netlify.com/post/k8s-minikube-pull-img-from-harbor-in-wsl2/minikube-pull-harbor-image/</link><pubDate>Sun, 23 Oct 2022 19:07:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/k8s-minikube-pull-img-from-harbor-in-wsl2/minikube-pull-harbor-image/</guid><description>&lt;h2 id="tldr">TL;DR
&lt;a class="header-anchor" href="#tldr">&lt;/a>
&lt;/h2>&lt;p>在 windows 環境的 wsl2 Ubuntu 上跑了 Minikube 要用來測試 kubernetes 的應用佈屬，但一直卡在拉取公司內部 harbor 鏡像的時候報 x509: certificate signed by unknown authority 錯誤。&lt;/p></description></item><item><title>Run Crond as Non Root in Alpine Container by Pod/Deployment</title><link>https://ulagraphy.netlify.com/post/k8s-run-crond-as-non-root-in-alpine/run-crond-as-non-root-in-alpine-container-by-pod-or-deployment/</link><pubDate>Sun, 23 Oct 2022 19:04:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/k8s-run-crond-as-non-root-in-alpine/run-crond-as-non-root-in-alpine-container-by-pod-or-deployment/</guid><description>&lt;h2 id="tldr">TL;DR
&lt;a class="header-anchor" href="#tldr">&lt;/a>
&lt;/h2>&lt;p>在
&lt;a href="https://ulahsieh.netlify.app/p/docker-run-cronjob-as-non-root-user-in-alpine-container/" title="上一篇文章" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
上一篇文章
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>中試了在 alpine docker container 中使用 non root user 跑 crond，但將 build 好的 docker image 搬到 kubernetes 給 deployment 的 pod 使用時，卻會出現 initgroup operation not permitted 的錯誤。&lt;/p></description></item><item><title>[Docker] Run Cronjob as Non Root User in Alpine Container</title><link>https://ulagraphy.netlify.com/post/devops-run-cronjob-as-non-root-user-in-alpine-docker-container/docker-run-cronjob-as-non-root-user-in-alpine-container/</link><pubDate>Sun, 23 Oct 2022 19:02:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-run-cronjob-as-non-root-user-in-alpine-docker-container/docker-run-cronjob-as-non-root-user-in-alpine-container/</guid><description>&lt;h2 id="tldr">TL;DR
&lt;a class="header-anchor" href="#tldr">&lt;/a>
&lt;/h2>&lt;p>apline image 預設只能給 root 執行 crond，但剛好遇到有不允許 container 使用 root 執行的安全政策的情況。本篇記錄如何在 apline container 中使用 non root user 執行 crond。&lt;/p></description></item><item><title>[Ansible] Windows Update with Authenticated Proxy</title><link>https://ulagraphy.netlify.com/post/devops-ansible-windows-update-with-auth-proxy/ansible-windows-update-with-auth-proxy/</link><pubDate>Sun, 23 Oct 2022 18:59:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-ansible-windows-update-with-auth-proxy/ansible-windows-update-with-auth-proxy/</guid><description>&lt;h2 id="背景">背景
&lt;a class="header-anchor" href="#%e8%83%8c%e6%99%af">&lt;/a>
&lt;/h2>&lt;p>在透過 ansible windows update module 更新 windows 時，都會因為 proxy 沒有設置而失敗。&lt;/p></description></item><item><title>[Node.js] Get Access Token 並使用 Microsoft Graph API 操作 AD Application</title><link>https://ulagraphy.netlify.com/post/programming-node-get-access-token-graph-api/node-get-azure-graph-access-token/</link><pubDate>Sun, 23 Oct 2022 18:55:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-node-get-access-token-graph-api/node-get-azure-graph-access-token/</guid><description>&lt;h2 id="情景">情景
&lt;a class="header-anchor" href="#%e6%83%85%e6%99%af">&lt;/a>
&lt;/h2>&lt;p>使用 NodeJS &lt;code>@azure/msal-node&lt;/code> module 取得 Access Token，並進一步使用 Microsoft Graph API 對操作 Azure AD Application 做 Role Assignment。&lt;/p></description></item><item><title>[Ansible] couldn't resolve module/action 'ansible.windows.win_powershell</title><link>https://ulagraphy.netlify.com/post/devops-ansible-cannot-resolve-module-action-windows-win-powershell/ansible-coundnot-resolve-module-action/</link><pubDate>Sun, 23 Oct 2022 18:52:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-ansible-cannot-resolve-module-action-windows-win-powershell/ansible-coundnot-resolve-module-action/</guid><description>&lt;h2 id="問題">問題
&lt;a class="header-anchor" href="#%e5%95%8f%e9%a1%8c">&lt;/a>
&lt;/h2>&lt;p>在 alphine 3.13 安裝 ansible 以及相關 ansible 模組後打包 docker image，在執行時 ansible.windows.win_powershell 模組時會報錯&lt;/p></description></item><item><title>[Terraform] azurerm_key_vault_secret Error: Provider produced inconsistent result after apply</title><link>https://ulagraphy.netlify.com/post/devops-terraform-azurerm-key-vault-secret-error-provider-produced-inconsistent-result/terraform-azurerm-key-vault-bug/</link><pubDate>Wed, 21 Sep 2022 20:31:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-terraform-azurerm-key-vault-secret-error-provider-produced-inconsistent-result/terraform-azurerm-key-vault-bug/</guid><description>&lt;h2 id="問題描述">問題描述
&lt;a class="header-anchor" href="#%e5%95%8f%e9%a1%8c%e6%8f%8f%e8%bf%b0">&lt;/a>
&lt;/h2>&lt;p>使用 Terraform 的 azurerm provider 創建 key vault secret 時，會出現以下錯誤：&lt;/p></description></item><item><title>Kubernetes Introduction</title><link>https://ulagraphy.netlify.com/post/kubernets-basic/</link><pubDate>Wed, 07 Sep 2022 21:13:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/kubernets-basic/</guid><description>&lt;h2 id="簡介">簡介
&lt;a class="header-anchor" href="#%e7%b0%a1%e4%bb%8b">&lt;/a>
&lt;/h2>&lt;p>官方定義:&lt;/p>
&lt;blockquote class="blockquote-center">
Kubernetes is an open-source system for automating deployment, scaling, and management of containerized applications.
&lt;/blockquote></description></item><item><title>[WSL2] Ubuntu 22.04 LTS nsenter: cannot open /proc/xxx/ns/time: No such file or directory</title><link>https://ulagraphy.netlify.com/post/os-wsl2-ubuntu-nsenter-cannot-open-proc-ns-time/wsl2-ubuntu-nsenter-cannot-open-proc-no-such-file-or-directory/</link><pubDate>Tue, 06 Sep 2022 21:17:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/os-wsl2-ubuntu-nsenter-cannot-open-proc-ns-time/wsl2-ubuntu-nsenter-cannot-open-proc-no-such-file-or-directory/</guid><description>&lt;h2 id="問題">問題
&lt;a class="header-anchor" href="#%e5%95%8f%e9%a1%8c">&lt;/a>
&lt;/h2>&lt;p>在使用
&lt;a href="https://github.com/DamionGans/ubuntu-wsl2-systemd-script.git" title="https://github.com/DamionGans/ubuntu-wsl2-systemd-script.git" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
https://github.com/DamionGans/ubuntu-wsl2-systemd-script.git
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a> 安裝 systemd 後，重啟 wsl，再開 terminal 時會遇到 &lt;code>cannot open /proc/xxx/ns/time: No such file or directory&lt;/code> 的錯誤。&lt;/p></description></item><item><title>[Ansible] winrm plaintext: the specified credentials were rejected by the server</title><link>https://ulagraphy.netlify.com/post/devops-ansible-winrm-plaintext-the-specified-credential-were-reject-by-server/ansible-winrm-plaintext-credentials-error/</link><pubDate>Tue, 06 Sep 2022 21:11:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-ansible-winrm-plaintext-the-specified-credential-were-reject-by-server/ansible-winrm-plaintext-credentials-error/</guid><description>&lt;p>紀錄 Ansible 使用 Add host 動態新增 Windows 控制節點時，遇到的 winrm 問題及解決方法。&lt;/p></description></item><item><title>[PowerShell] Get-Acl Drive Not Found Error</title><link>https://ulagraphy.netlify.com/post/os-powershell-get-acl-drive-not-found/powershell-get-acl-drive-not-found-error/</link><pubDate>Tue, 06 Sep 2022 21:07:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/os-powershell-get-acl-drive-not-found/powershell-get-acl-drive-not-found-error/</guid><description>&lt;p>紀錄一下在 windows10 環境下無法正常使用 get-acl 訪問 active directory 網域服務下的資源的問題與解決方式。&lt;/p></description></item><item><title>Kustomize Can’t Render the ConfigMap Hashing Name to CronJob Resource</title><link>https://ulagraphy.netlify.com/post/k8s-kustomize-render-configmap-hashing-name-cronjob-resource/kustomization-render-failed-in-cronjob/</link><pubDate>Tue, 06 Sep 2022 21:02:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/k8s-kustomize-render-configmap-hashing-name-cronjob-resource/kustomization-render-failed-in-cronjob/</guid><description>&lt;h2 id="問題">問題
&lt;a class="header-anchor" href="#%e5%95%8f%e9%a1%8c">&lt;/a>
&lt;/h2>&lt;p>在使用 kustomize 配置 Kubernetes 資源時，Kustomization 定義的 ConfigMap 無法正確的渲染到 CronJob 資源中。
原 yaml 檔如下:&lt;/p></description></item><item><title>[Windows] 用 plink 自動化 ssh-copy-id 到指定機器</title><link>https://ulagraphy.netlify.com/post/win10-plink-automate-ssh-copy-id/</link><pubDate>Mon, 13 Jun 2022 15:13:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/win10-plink-automate-ssh-copy-id/</guid><description/></item><item><title>Azure IoT Hub node-red 實做</title><link>https://ulagraphy.netlify.com/post/devops-azure-iot-hub-to-nodered/azure-iot-hub-to-nodered/</link><pubDate>Mon, 30 May 2022 10:07:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-azure-iot-hub-to-nodered/azure-iot-hub-to-nodered/</guid><description>&lt;p>本篇記錄如何使用 Node-Red 實作 Azure IoT Hub 的資料傳輸。&lt;/p></description></item><item><title>[Coldplay] Speed of Sound</title><link>https://ulagraphy.netlify.com/post/coldplay-speed-of-sound/coldplay-speed-of-sound/</link><pubDate>Fri, 27 May 2022 23:00:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/coldplay-speed-of-sound/coldplay-speed-of-sound/</guid><description/></item><item><title>Helm Migrate stable/nginx-ingress to ingress-nginx</title><link>https://ulagraphy.netlify.com/post/k8s-helm-migrate-stable-nginx-ingress-to-ingress-nginx/helm-migrate-stable-nginx-ingress-to-ingress-nginx/</link><pubDate>Sun, 22 May 2022 21:17:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/k8s-helm-migrate-stable-nginx-ingress-to-ingress-nginx/helm-migrate-stable-nginx-ingress-to-ingress-nginx/</guid><description>&lt;h2 id="前言">前言
&lt;a class="header-anchor" href="#%e5%89%8d%e8%a8%80">&lt;/a>
&lt;/h2>&lt;p>原先集群使用的 helm chart 為 stable/nginx-ingress，而此 helm chart 已經被棄用，若 nginx 維持在舊版的話，之後新的漏洞修補都無法被含括。&lt;/p>
&lt;p>此篇記錄如何將集群上面跑的 nginx-ingress-controller 換成新的版本的 chart ingress-nginx/ingress-nginx。&lt;/p></description></item><item><title>[Coldplay] Hymn For The Weekend</title><link>https://ulagraphy.netlify.com/post/coldplay-hymn-for-the-weekend/</link><pubDate>Fri, 20 May 2022 13:00:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/coldplay-hymn-for-the-weekend/</guid><description/></item><item><title>[Ansible] get_fact ipv4 address 取到 eth0</title><link>https://ulagraphy.netlify.com/post/ansible-get-fact-to-target-nic/</link><pubDate>Thu, 19 May 2022 13:02:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/ansible-get-fact-to-target-nic/</guid><description>&lt;h2 id="tl-dr">TL; DR
&lt;a class="header-anchor" href="#tl-dr">&lt;/a>
&lt;/h2>&lt;p>Ansible 的控制節點以及受控節點皆使用 VM 打起來，在控制節點使用 get-facts 要取得受控節點的 IP 資料時，總是會取得第一張網卡 eth0，但目標是要取得第二張網卡。&lt;/p></description></item><item><title>[Kubernetes] 停止調度 / 刪除節點</title><link>https://ulagraphy.netlify.com/post/k8s-delete-worker-node/kubernetes-delete-worker-node/</link><pubDate>Thu, 19 May 2022 11:36:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/k8s-delete-worker-node/kubernetes-delete-worker-node/</guid><description>&lt;p>cordon、drain 和 delete 三個命令都會使 kubernetes node 停止被調度，本篇記錄如何優雅的刪除節點。&lt;/p></description></item><item><title>MongoDB 一次為舊有資料加上新增欄位</title><link>https://ulagraphy.netlify.com/post/database-mongodb-update-the-document/mongodb-update-new-field-to-old-document/</link><pubDate>Thu, 19 May 2022 11:15:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/database-mongodb-update-the-document/mongodb-update-new-field-to-old-document/</guid><description/></item><item><title>為對外的 istio gateway 加上 https</title><link>https://ulagraphy.netlify.com/post/k8s-add-tls-to-istio-gw/add-https-to-istio-gw/</link><pubDate>Thu, 19 May 2022 09:11:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/k8s-add-tls-to-istio-gw/add-https-to-istio-gw/</guid><description>&lt;p>本篇文章記錄怎麼使用 cert-manager 為對外的 istio gateway 加上 https。&lt;/p>
&lt;h2 id="憑證分類">憑證分類
&lt;a class="header-anchor" href="#%e6%86%91%e8%ad%89%e5%88%86%e9%a1%9e">&lt;/a>
&lt;/h2>&lt;ol>
&lt;li>
&lt;p>&lt;strong>自簽憑證&lt;/strong>：某些不需要被公開存取、但希望達到資料傳輸能加密的內部服務，可以使用自簽憑證，Client 去存取的時候自己帶上 CA 憑證去驗證即可，例如 HashiCorp Vault, AWS RDS TLS 連線&amp;hellip;等。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>第三方 CA 機構簽發憑證&lt;/strong>：如果是公開的網路服務，就必須透過正規的 CA 機構來簽發，如需要收費的 Digicert, SSL.com, Symantec&amp;hellip;等，或是免費的 Let’s Encrypt。&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>[Terraform] helm_release Pass Array/List to Set's Value</title><link>https://ulagraphy.netlify.com/post/devops-terraform-helm-release-set-array/terraform-helm-release-pass-array/</link><pubDate>Thu, 19 May 2022 08:58:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-terraform-helm-release-set-array/terraform-helm-release-pass-array/</guid><description>&lt;p>在 terraform 使用 helm_release，在傳入 set 參數時遇到有 chart 指定要 array 型態的值，但使用 &lt;code>[]&lt;/code> 傳入 string array 卻會報無法 iterate array。在這邊紀錄一下解法。&lt;/p></description></item><item><title>Calico Running but Unready (Ready 0/1)</title><link>https://ulagraphy.netlify.com/post/k8s-calico-running-but-unready/calico-running-but-unready/</link><pubDate>Thu, 19 May 2022 08:53:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/k8s-calico-running-but-unready/calico-running-but-unready/</guid><description>&lt;h2 id="環境說明">環境說明
&lt;a class="header-anchor" href="#%e7%92%b0%e5%a2%83%e8%aa%aa%e6%98%8e">&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>Kubernetes 1.20.10&lt;/li>
&lt;li>Calico 3.23&lt;/li>
&lt;/ul></description></item><item><title>把 Router 當 Switch 用</title><link>https://ulagraphy.netlify.com/post/network-using-router-as-switch/using-router-as-switch/</link><pubDate>Mon, 16 May 2022 17:53:01 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/network-using-router-as-switch/using-router-as-switch/</guid><description>&lt;p>在公司架環境時，剛好遇到要讓幾台電腦都要直接連公司網段的情況，可是手上只有一台 router，如果把現有的 IP 網路線插在 WAN port 上，那麼插在 LAN port 的機器都會是虛擬網段，不符所需。後來 google 發現只要照下面二個步驟就可以讓 router 變身成 switch：&lt;/p></description></item><item><title>Install KVM (libvert) by Vagrant on CentOS</title><link>https://ulagraphy.netlify.com/post/devops-install-kvm-libvertd-by-vagrant-on-centos/install-kvm-by-vagrant-on-centos/</link><pubDate>Mon, 16 May 2022 17:49:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-install-kvm-libvertd-by-vagrant-on-centos/install-kvm-by-vagrant-on-centos/</guid><description>&lt;p>上次紀錄了如何在 Ubuntu 透過 Virtualbox 使用 Vagrant，本篇文章記錄如何在 CentOS 透過 KVM 使用 Vagrant 自動化建立 VM。&lt;/p></description></item><item><title>Apache Redirect http to https</title><link>https://ulagraphy.netlify.com/post/programming-apache-redirect-http-to-https/redirect-http-to-https-on-apache/</link><pubDate>Sun, 15 May 2022 09:40:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-apache-redirect-http-to-https/redirect-http-to-https-on-apache/</guid><description>&lt;p>目前手上有一個使用 php 開發的網頁，web server 使用 Apache (httpd) 實做。本篇記錄如何將 http 自動轉址到 https。&lt;/p></description></item><item><title>Vagrant on Ubuntu</title><link>https://ulagraphy.netlify.com/post/devops-install-vagrunt-on-ubuntu/install-vagrunt-on-ubuntu/</link><pubDate>Sat, 14 May 2022 10:01:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-install-vagrunt-on-ubuntu/install-vagrunt-on-ubuntu/</guid><description>&lt;p>Vagrant 是由 HashiCorp 開源、使用 Ruby 開發的虛擬機器管理工具，用於管理如 VirtualBox、VMware、AWS 等 VM，主要好處是可以提供一個可配置、可移植和復用的虛擬機環境，可快速地使用設定檔 (Vagrantfile) 和 command line 自動化安裝、配置一台 VM，降低了開發者搭建環境的時間。&lt;/p></description></item><item><title>Ubuntu 20.04 安裝本地 deb 包</title><link>https://ulagraphy.netlify.com/post/os-ubuntu-install-local-deb/ubuntu-install-deb-file/</link><pubDate>Mon, 09 May 2022 19:54:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/os-ubuntu-install-local-deb/ubuntu-install-deb-file/</guid><description>&lt;p>apt 是 ubuntu 最常用的包命令，用於從 Ubuntu 存儲庫、PPA 和第三方 apt 存儲庫安裝、刪除和管理 package。從 Ubuntu 20.04 開始，apt 命令支持對本地 deb 文件的安裝。&lt;/p></description></item><item><title>[Coldplay] Biutyful</title><link>https://ulagraphy.netlify.com/post/coldplay-biutyful/</link><pubDate>Sat, 23 Apr 2022 21:00:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/coldplay-biutyful/</guid><description/></item><item><title>在 Kubernetes 上佈署 MongoDB</title><link>https://ulagraphy.netlify.com/post/database-mongodb-intro/install-mongodb-on-kubernetes/</link><pubDate>Wed, 20 Apr 2022 19:59:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/database-mongodb-intro/install-mongodb-on-kubernetes/</guid><description>&lt;p>紀錄一下 mongodb 的 kubernetes 佈署檔，分為 standalone 以及 replica set，會宣告 persistent volume 以儲存永久性資料 (如 database 資料、index 以及設定檔)。&lt;/p></description></item><item><title>[Golang] 查詢 SQL DB 的幾種匯出方式</title><link>https://ulagraphy.netlify.com/post/programming-golang-sql-query/golang-sql-query/</link><pubDate>Tue, 19 Apr 2022 21:19:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-golang-sql-query/golang-sql-query/</guid><description>&lt;p>簡易紀錄一下 sql query 回傳(印出)查詢結果的三種不同方法，三種方式回傳的格式都差不多，只是型態可能不一樣。本文使用的 database 是 Oracle。&lt;/p></description></item><item><title>創建 GitLab CICD pipeline 完成自動部屬到 Kubernetes</title><link>https://ulagraphy.netlify.com/post/devops-gitlab-cicd-pipeline-on-k8s/build-cicd-pipeline-and-cd-to-k8s/</link><pubDate>Fri, 15 Apr 2022 18:18:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-gitlab-cicd-pipeline-on-k8s/build-cicd-pipeline-and-cd-to-k8s/</guid><description>&lt;h2 id="前言">前言
&lt;a class="header-anchor" href="#%e5%89%8d%e8%a8%80">&lt;/a>
&lt;/h2>&lt;p>在還沒接觸 CI/CD 時，一直有『這東西一定很難』的預設立場，直到開始撰寫第一個 .gitlab-ci.yml 時，心理認知的困難度仍沒消失。不過慶幸的是，網路上的教學真的很多，GitLab 社群也超給力的有著豐富的文檔跟範例。GitLab CI/CD 整體架構 (gitlab server、runner、excutor、pipeline、stage、job) 其實很單純，所以在實做時，可以把自動化需求切分，先從第一段 build 開始做，做成功後，再進階到 test 及 deploy。把困難的任務分段做，感覺就不那麼難以親近了！&lt;/p></description></item><item><title>已登入 harbor 但 kubelet 仍會 ImagePullBackOff</title><link>https://ulagraphy.netlify.com/post/k8s-kubelet-pull-image-backoff/image-pull-backoff-after-harbor-login/</link><pubDate>Thu, 14 Apr 2022 19:33:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/k8s-kubelet-pull-image-backoff/image-pull-backoff-after-harbor-login/</guid><description>&lt;p>在 kubernetes 環境上拉取私有鏡像倉庫 harbor 的 image 時，一直卡在 ImagePullBackOff 的狀態，decribe pod 發現是權限問題導致拉取失敗。&lt;/p></description></item><item><title>在 Kubernetes 上使用 helm 建立 GitLab Runner</title><link>https://ulagraphy.netlify.com/post/devops-install-gitlab-runner-on-k8s-using-helm/install-gitlab-runner-on-k8s-by-helm/</link><pubDate>Sun, 10 Apr 2022 16:36:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-install-gitlab-runner-on-k8s-using-helm/install-gitlab-runner-on-k8s-by-helm/</guid><description>&lt;p>GitLab Runner 是一個獨立的程序，可以用以下三種方式安裝，請參考
&lt;a href="https://docs.gitlab.com/runner/install/" title="官網教學" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
官網教學
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>。&lt;/p>
&lt;ul>
&lt;li>GitLab Official Repositories RPM/deb packages&lt;/li>
&lt;li>Using Binaries&lt;/li>
&lt;li>Using Containers&lt;/li>
&lt;/ul></description></item><item><title>GitLab CICD 介紹</title><link>https://ulagraphy.netlify.com/post/devops-gitlab-cicd-intro/gitlab-cicd-intro/</link><pubDate>Sun, 10 Apr 2022 16:34:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-gitlab-cicd-intro/gitlab-cicd-intro/</guid><description>&lt;h2 id="cicd">CI/CD
&lt;a class="header-anchor" href="#cicd">&lt;/a>
&lt;/h2>&lt;p>&lt;img src="https://ulagraphy.netlify.com/imgs/img-lazy-loading.gif" data-src="https://imgur.com/g4KAXij.png" alt="" />&lt;/p></description></item><item><title>使用 docker-compose 建立 Harbor 私有倉庫 (w/ https)</title><link>https://ulagraphy.netlify.com/post/devops-install-harbor-by-docker-compose/install-harbor-by-docker-compose/</link><pubDate>Sun, 10 Apr 2022 15:55:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-install-harbor-by-docker-compose/install-harbor-by-docker-compose/</guid><description>&lt;p>默認情況下，Harbor 不附帶證書，可以直接使用 http 訪問。但在正式上線的環境中，建議配置 https。&lt;/p></description></item><item><title>設定 liveness probe 監聽應用以重啟 pod</title><link>https://ulagraphy.netlify.com/post/k8s-setup-liveness-probe-to-restart-pod-when-showup-err-log/setup-liveness-probe-to-restart-when-pod-has-error-log/</link><pubDate>Thu, 31 Mar 2022 22:52:15 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/k8s-setup-liveness-probe-to-restart-pod-when-showup-err-log/setup-liveness-probe-to-restart-when-pod-has-error-log/</guid><description>&lt;p>目前手上有一個監聽 Oracle CDC 的程式跑在以 Debian 為基底的 kubernetes pod 中，會定期因為 Oracle 的錯誤訊息 ORA-12518: TNS 監聽程式無法分發客戶機連線的問題而斷線。此時雖然程式有 error log，但 Pod 的狀態仍然為 Running，只要重啟 Pod 即可重新正常運作。&lt;/p></description></item><item><title>在容器裡 curl Kubernetes API server</title><link>https://ulagraphy.netlify.com/post/k8s-curl-k8s-api-server-within-pod/curl-kubernetes-api-server-within-pod/</link><pubDate>Thu, 31 Mar 2022 21:57:12 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/k8s-curl-k8s-api-server-within-pod/curl-kubernetes-api-server-within-pod/</guid><description>&lt;p>連接 k8s 的 api-server 有三種方式：&lt;/p>
&lt;ol>
&lt;li>Kubernetes Node 通過 kubectl proxy 中轉連接&lt;/li>
&lt;li>通過授權驗證直接連接，例如 kubectl 和各種 client 就是這種情況&lt;/li>
&lt;li>容器內部通過 ServiceAccount 連接&lt;/li>
&lt;/ol>
&lt;p>本文以第三種情況作範例。&lt;/p></description></item><item><title>[Git] Your branch and 'origin/master' have diverged</title><link>https://ulagraphy.netlify.com/post/devops-git-your-branch-and-origin-master-have-diverged/git-your-branch-and-origin-master-have-diverged/</link><pubDate>Tue, 29 Mar 2022 20:19:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-git-your-branch-and-origin-master-have-diverged/git-your-branch-and-origin-master-have-diverged/</guid><description>&lt;p>在 git status 的時後發現本地端跟遠端倉庫 commit 分岔 (diverged)，代表本地所在的分支跟遠端倉庫的分支各走各的路。&lt;/p></description></item><item><title>Istio 沒掛，但正確的設置 gateway 跟 virtual service 後，卻一直 404 not found</title><link>https://ulagraphy.netlify.com/post/k8s-istio-404-not-found/istio-404-not-found/</link><pubDate>Thu, 24 Mar 2022 21:52:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/k8s-istio-404-not-found/istio-404-not-found/</guid><description>&lt;p>手上有一個寫好的 API 要對外釋出，在設置完 istio 資源之後，curl istio ingress gateway/targetAPI 卻一直回傳 404 Not Found，照理來說這個 API 如果找不到資料回傳的 404 訊息應該是 &lt;code>{&amp;quot;error&amp;quot;:&amp;quot;Record Not Found, the serial number doesn't exist&amp;quot;}&lt;/code>，用這篇文章記錄問題跟解決方式。&lt;/p></description></item><item><title>Terraform 從 0.14 升級到 1.1.7 問題排查</title><link>https://ulagraphy.netlify.com/post/devops-terraform-upgrade-to-v1.1.7/terraform-upgrade-to-1-1-7/</link><pubDate>Tue, 22 Mar 2022 17:13:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-terraform-upgrade-to-v1.1.7/terraform-upgrade-to-1-1-7/</guid><description>&lt;p>手上有 Terraform 0.14 版跑的腳本，最近發現 Terraform 已經升級到 1.1.7 了，便打算在升級的環境下，跑 0.14 版跑成功的腳本，看看是否有誤，紀錄一下遇到的問題以及解法。&lt;/p></description></item><item><title>Kubernetes namespace 一直 delete 不成功的原因 (卡在 terminating status)</title><link>https://ulagraphy.netlify.com/post/k8s-namespace-delete-terminating-status/kubernetes-namespace-delete-terminating/</link><pubDate>Tue, 22 Mar 2022 14:49:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/k8s-namespace-delete-terminating-status/kubernetes-namespace-delete-terminating/</guid><description>&lt;p>最近在刪除 namespace 的時候總是會卡在 Terminating 的狀態，一直不疑有他的直接使用網路上常看的解決方法將 spec.finalizers 清空。但因為每次刪、每次卡，就連完全無任何資源的命名空間也是卡！仔細看後才發現原來是有其他元件錯誤，進而造成影響。&lt;/p></description></item><item><title>Debezium 1.5 snapshot.mode schema_only not work</title><link>https://ulagraphy.netlify.com/post/data-debezium-1.5-snapshot-mode-schema-only-not-work/debezium-snapshot-mode-schema-only-not-work/</link><pubDate>Tue, 22 Mar 2022 14:21:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-debezium-1.5-snapshot-mode-schema-only-not-work/debezium-snapshot-mode-schema-only-not-work/</guid><description>&lt;p>使用 Debezium 1.5 連上 connector 後，發現資料會從資料表的最舊資料一筆資料開始送，查官網後發現有 &lt;code>snapshot.mode&lt;/code> 的參數可以設置，但設置完畢後卻發現有 error，本篇記錄解法。&lt;/p></description></item><item><title>安裝監聽於所有 namespace 的 strimzi kafka operator, 便於在不同 namespace 下安裝不同座 Kafka cluster</title><link>https://ulagraphy.netlify.com/post/data-install-strimzi-kafka-operator-to-watch-all-namespace/install-strimzi-kafka-operator-to-watch-all-namespace/</link><pubDate>Mon, 21 Mar 2022 22:33:25 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-install-strimzi-kafka-operator-to-watch-all-namespace/install-strimzi-kafka-operator-to-watch-all-namespace/</guid><description>&lt;p>以下紀錄如何隔離 kafka operator 與建立的 kafka cluster 的命名空間，預計是可以在一座 kubernetes cluster 上只需安裝一個 kafka operator 來建立多個 kafka cluster。&lt;/p></description></item><item><title>使用 helm 安裝 Metrics Server</title><link>https://ulagraphy.netlify.com/post/k8s-helm-install-metrics-server/kubernets-install-metrics-server-by-helm/</link><pubDate>Mon, 21 Mar 2022 21:28:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/k8s-helm-install-metrics-server/kubernets-install-metrics-server-by-helm/</guid><description>&lt;p>Metrics Server 通過 kubelet（cAdvisor）獲取監控數據，主要作用是為 kube-scheduler、HPA(Horizontal Pod Autoscaler)等 k8s 核心組件，以及 kubectl top 命令和 Dashboard 等 UI 組件提供數據來源，可以用來看 node 或 pod 的資源 (CPU &amp;amp; Memory) 消耗。須注意的是，Metric Server 是 in memory 的 monitor，只可以查詢當前的度量數據，並不保存歷史數據。&lt;/p></description></item><item><title>Containerd (crictl) 配置私有鏡像倉庫</title><link>https://ulagraphy.netlify.com/post/devops-containerd-crictl-configure-private-img-registry/containerd-configure-private-harbor/</link><pubDate>Wed, 16 Mar 2022 18:23:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-containerd-crictl-configure-private-img-registry/containerd-configure-private-harbor/</guid><description>&lt;p>前幾天將 k8s 升級到 1.23 版，使用 containerd 當 CRI，立馬就遇到要拉取私有 image registry 的狀況，本文紀錄配置過程。&lt;/p></description></item><item><title>Mongodb 可能是讓機器 OOM crash 的元兇 ?!</title><link>https://ulagraphy.netlify.com/post/database-mongodb-oom-crash/mongodb-oom-crash/</link><pubDate>Mon, 14 Mar 2022 19:53:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/database-mongodb-oom-crash/mongodb-oom-crash/</guid><description>&lt;h2 id="問題">問題
&lt;a class="header-anchor" href="#%e5%95%8f%e9%a1%8c">&lt;/a>
&lt;/h2>&lt;p>手上有三台各有 160GB 的機器，但卻會在跑一段時間後輪流死當。觀察記憶體消耗之後，發現兇手就是 MongoDB!!!&lt;/p></description></item><item><title>在 Rocky Linux 8 安裝 Kubernetes 1.23 (containerd as cri)</title><link>https://ulagraphy.netlify.com/post/k8s-1.23-installation/install-kubernetes-123-on-rocky-linux/</link><pubDate>Sun, 13 Mar 2022 14:56:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/k8s-1.23-installation/install-kubernetes-123-on-rocky-linux/</guid><description>&lt;p>kubernetes 1.22 版之後，就不再支持 Docker 作為 container runtime 以及管理容器及鏡像的工具了。可以使用 &lt;code>containerd&lt;/code> 取代 docker 的 container runtime；以及 &lt;code>crictl&lt;/code> 作為 CRI(Container Runtime Interface)，另外 podman 也可以用來管理容器和鏡像。本篇記錄基於 containerd &amp;amp; crictl 使用 kubeadm 部屬 Kubernetes 集群的過程。&lt;/p></description></item><item><title>安裝 Kubernetes Dashboard - 單集群可視化管理</title><link>https://ulagraphy.netlify.com/post/k8s-install-kubernetes-dashboard/kubernets-dashboard-installation/</link><pubDate>Sun, 13 Mar 2022 14:46:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/k8s-install-kubernetes-dashboard/kubernets-dashboard-installation/</guid><description>&lt;p>Kubernetes Dashboard 是由官方維護的 Kubernetes 集群 WEB UI 管理工具，能查看 Kubernetes Cluster 上資源分佈與使用狀況，也可以創建或者修改 Kubernetes 資源，讓使用者透過 Web UI 介面取代指令的管理 Kubernetes。&lt;/p></description></item><item><title>使用 docker compose 安裝 kafka</title><link>https://ulagraphy.netlify.com/post/data-install-kafka-by-docker-compose/install-kafka-by-docker-compose/</link><pubDate>Wed, 09 Mar 2022 21:54:12 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-install-kafka-by-docker-compose/install-kafka-by-docker-compose/</guid><description>&lt;h2 id="安裝單節點-kafka">安裝單節點 Kafka
&lt;a class="header-anchor" href="#%e5%ae%89%e8%a3%9d%e5%96%ae%e7%af%80%e9%bb%9e-kafka">&lt;/a>
&lt;/h2>&lt;h3 id="1-準備-docker-composeyaml-檔案">1. 準備 docker-compose.yaml 檔案
&lt;a class="header-anchor" href="#1-%e6%ba%96%e5%82%99-docker-composeyaml-%e6%aa%94%e6%a1%88">&lt;/a>
&lt;/h3></description></item><item><title>Linux 吃掉了記憶體 ?!</title><link>https://ulagraphy.netlify.com/post/os-linux-eat-all-memory/linux-eat-all-memory/</link><pubDate>Thu, 03 Mar 2022 19:21:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/os-linux-eat-all-memory/linux-eat-all-memory/</guid><description>&lt;h2 id="前言">前言
&lt;a class="header-anchor" href="#%e5%89%8d%e8%a8%80">&lt;/a>
&lt;/h2>&lt;p>在觀察用於儲存 k8s 的 nfs server 時，發現記憶體的 cache/buffer 值非常高，但細看 top 卻無任何應用程式佔用記憶體空間。查了一下網路，發現是 linux 系統本身的機制。&lt;/p></description></item><item><title>司馬庫斯兩日遊🤎</title><link>https://ulagraphy.netlify.com/post/smangus/</link><pubDate>Mon, 28 Feb 2022 21:00:00 +0800</pubDate><guid>https://ulagraphy.netlify.com/post/smangus/</guid><description>&lt;p>去年疫情悶了半年，十一月初就早早訂了 228 的司馬庫斯的櫻花祭旅遊。因為不想舟車勞頓的開三四個小時的山路，就決定邀請大姊男友家一起直接包八人小團出遊！每次出遊前一個禮拜就會忍不住每天都看好幾次的氣象預報，但結果是，不是前一天看的預報都不準 🤣&lt;/p></description></item><item><title>[KVM] Install Rocky Linux</title><link>https://ulagraphy.netlify.com/post/os-kvm-install-rocky-linux/kvm-install-rocky-linux/</link><pubDate>Wed, 23 Feb 2022 16:37:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/os-kvm-install-rocky-linux/kvm-install-rocky-linux/</guid><description>&lt;h2 id="安裝-kvm-套件">安裝 KVM 套件
&lt;a class="header-anchor" href="#%e5%ae%89%e8%a3%9d-kvm-%e5%a5%97%e4%bb%b6">&lt;/a>
&lt;/h2>&lt;p>請參考之前的
&lt;a href="https://ulahsieh.netlify.app/p/kvm-virt-install-centos-vm/" title="文章" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
文章
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>&lt;/p></description></item><item><title>[KVM] 為 image 瘦身</title><link>https://ulagraphy.netlify.com/post/os-kvm-shrink-image/kvm-shrink-image/</link><pubDate>Tue, 22 Feb 2022 22:22:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/os-kvm-shrink-image/kvm-shrink-image/</guid><description>&lt;h2 id="問題說明">問題說明
&lt;a class="header-anchor" href="#%e5%95%8f%e9%a1%8c%e8%aa%aa%e6%98%8e">&lt;/a>
&lt;/h2>&lt;p>在建立 vm 後，發現其使用的 qcow2 image 檔案大小超級大。使用 qemu-img info 查看 vm 真正的使用容量僅 2G 但實際上卻佔用了啟動時劃分的 disk size 如範例的 60G。&lt;/p></description></item><item><title>佈署 LAMP (Apache + MariaDB + PHP Web Server on Linux)</title><link>https://ulagraphy.netlify.com/post/programming-lamp-apache-mariadb-php-on-linux/deploy-lamp-on-linux/</link><pubDate>Tue, 22 Feb 2022 20:01:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-lamp-apache-mariadb-php-on-linux/deploy-lamp-on-linux/</guid><description>&lt;h2 id="系統環境">系統環境
&lt;a class="header-anchor" href="#%e7%b3%bb%e7%b5%b1%e7%92%b0%e5%a2%83">&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>CentOS 7.9&lt;/li>
&lt;li>PHP 7.2.34&lt;/li>
&lt;li>Apache/2.4.6&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span>[root@ewrula ~]# httpd -v
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span>Server version: Apache/2.4.6 (CentOS)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>&lt;span>Server built: Jan 25 2022 14:08:43
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>MariaDB 5.5.68&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span>[root@ewrula ~]# mysql -V
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span>mysql Ver 15.1 Distrib 5.5.68-MariaDB, for Linux (x86_64) using readline 5.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>VirtualBox 安裝 VM 錯誤 (E_FAIL 0x80004005) 之解決</title><link>https://ulagraphy.netlify.com/post/os-virtualbox-vm-efail/virtualbox-efail-error/</link><pubDate>Mon, 21 Feb 2022 19:14:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/os-virtualbox-vm-efail/virtualbox-efail-error/</guid><description>&lt;p>在 Win10 使用 VirtualBox 安裝 VM 時遇到下述錯誤，紀錄一下解決方式。&lt;/p></description></item><item><title>Ingress does not contain a valid IngressClass</title><link>https://ulagraphy.netlify.com/post/kubernets-ingress-invalid-ingressclass/</link><pubDate>Fri, 11 Feb 2022 06:20:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/kubernets-ingress-invalid-ingressclass/</guid><description>&lt;h2 id="問題描述">問題描述
&lt;a class="header-anchor" href="#%e5%95%8f%e9%a1%8c%e6%8f%8f%e8%bf%b0">&lt;/a>
&lt;/h2>&lt;p>nginx ingress 從原本 deprecated 的 stable/nginx-ingress helm chart 改為 ingress-nginx/ingress-nginx chart 後，發現 ingress resource 的 nginx 網頁 404 not found，查看 ingress nginx controller log 發現有 &lt;code>ingress does not contain a valid IngressClass&lt;/code> 的錯誤。&lt;/p></description></item><item><title>[Hexo] Add Search Function under NexT8 Theme</title><link>https://ulagraphy.netlify.com/post/blog-hexo-add-search-function-next8/hexo-add-search-bar/</link><pubDate>Wed, 09 Feb 2022 19:21:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/blog-hexo-add-search-function-next8/hexo-add-search-bar/</guid><description>&lt;p>文章愈來愈多啦，只用目錄跟標籤找有如大海撈針，所以來幫部落格添加本站搜索的功能！在這邊記錄一下。&lt;/p></description></item><item><title>[KVM] guest can't access Internet</title><link>https://ulagraphy.netlify.com/post/os-kvm-guest-cannot-access-internet/kvm-guest-cannot-access-internet/</link><pubDate>Tue, 08 Feb 2022 20:46:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/os-kvm-guest-cannot-access-internet/kvm-guest-cannot-access-internet/</guid><description>&lt;h2 id="狀況">狀況
&lt;a class="header-anchor" href="#%e7%8b%80%e6%b3%81">&lt;/a>
&lt;/h2>&lt;p>在 CentOS 建立了幾台 KVM 虛擬機，但是在系統重啟後發現這幾台機器都無法連網了。只能與 host 互 ping，無法連網、無法 ping 同網段的其他主機、KVM guest 與 guest 間也不認得。&lt;/p></description></item><item><title>[CentOS] Crash Analysis (kexec &amp; kdump)</title><link>https://ulagraphy.netlify.com/post/os-centos-crash-and-analysis-kexec-kdump/centos-crash-analysis/</link><pubDate>Tue, 08 Feb 2022 18:58:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/os-centos-crash-and-analysis-kexec-kdump/centos-crash-analysis/</guid><description>&lt;h2 id="原理">原理
&lt;a class="header-anchor" href="#%e5%8e%9f%e7%90%86">&lt;/a>
&lt;/h2>&lt;p>&lt;code>kexec&lt;/code>（kernel execution）是 Linux 核心的一種機制，允許從當前執行的核心啟動新核心。kexec 會繞過系統韌體 (BIOS or UEFI) 的初始化，並直接將新核心載入到主記憶體執行，可以實現系統的快速重啟。&lt;/p></description></item><item><title>[Python &amp; Golang] Selenium Screenshot to the Specific Area</title><link>https://ulagraphy.netlify.com/post/programming-python-golang-selenium-screenshot-specific-area/screenshot-specific-area-by-selenium/</link><pubDate>Wed, 26 Jan 2022 17:46:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-python-golang-selenium-screenshot-specific-area/screenshot-specific-area-by-selenium/</guid><description>&lt;p>本篇文章紀錄如何使用 python 以及 golang 改寫的 selenium，螢幕截圖指定網址的特定範圍並存成圖片。&lt;/p></description></item><item><title>[Docker] 包 Selenium Chrome Docker Image</title><link>https://ulagraphy.netlify.com/post/devops-selenium-chrome-docker-img/build-selenium-chrome-docker-image/</link><pubDate>Mon, 24 Jan 2022 17:27:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-selenium-chrome-docker-img/build-selenium-chrome-docker-image/</guid><description>&lt;p>紀錄一下把 golang 改寫的 selenium 爬蟲程式包成 docker image 遇到的問題。&lt;/p></description></item><item><title>[Oracle] Install Oracle 11g XE and Establish CDC by Debezium</title><link>https://ulagraphy.netlify.com/post/data-oracle-11g-xe-cdc-debezium/install-oracle-11g-and-establish-cdc-by-debezium/</link><pubDate>Wed, 19 Jan 2022 11:03:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-oracle-11g-xe-cdc-debezium/install-oracle-11g-and-establish-cdc-by-debezium/</guid><description>&lt;h2 id="debezium">Debezium
&lt;a class="header-anchor" href="#debezium">&lt;/a>
&lt;/h2>&lt;h3 id="簡介">簡介
&lt;a class="header-anchor" href="#%e7%b0%a1%e4%bb%8b">&lt;/a>
&lt;/h3>&lt;p>Debezium 是一個由 RedHat 開源的基於資料庫變更日誌的實時變更數據捕獲（CDC）工具，構建在 Apache Kafka 之上，是 Apache Kafka Connect 的 Source Connector，可以實時獲取行級別（row-level）資料的更改事件（INSERT、UPDATE 和 DELETE）並同步到 Kafka。目前支援的常見資料庫有 MySQL(binlog)、Oracle(logminer or xstream)、MongoDB(change streams)、PostgreSQL(logical replication stream mode)、SQL Server(transaction log)&amp;hellip;等。本文範例是使用 Oracle 的 logminer 日誌透過 Debezium 獲取指定資料庫的變更事件。&lt;/p></description></item><item><title>[golang] 使用 tebeka selenium 爬蟲模擬操控網頁</title><link>https://ulagraphy.netlify.com/post/programming-golang-tebeka-selenium/golang-tebeka-selenium/</link><pubDate>Mon, 10 Jan 2022 16:03:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-golang-tebeka-selenium/golang-tebeka-selenium/</guid><description>&lt;p>最近碰到一個需從網頁去擷取圖片的需求，原本拿到的 sample code 是由 python 的 selenium 爬的，但後來發現有大神將此包改寫成 golang
&lt;a href="https://github.com/tebeka/selenium" title="tebeka/selenium" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
tebeka/selenium
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>，所以就試著改寫看看，在此紀錄一下。&lt;/p></description></item><item><title>[golang] go mod replace 解决 fork repo 匯入問題</title><link>https://ulagraphy.netlify.com/post/programming-golang-mod-replace-for-fork-repo/go-mod-replace-fork-repo/</link><pubDate>Thu, 06 Jan 2022 14:10:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-golang-mod-replace-for-fork-repo/go-mod-replace-fork-repo/</guid><description>&lt;p>開發程式時使用 github 上各大神開發的第三方套件，有時候有自己的額外需求需要進行改造，所以 fork 到自己的 github 修改後，再 import 到自己的專案中。但當在進行構建的時候，報錯如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-v" data-lang="v">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span>&lt;span style="color:#66d9ef">go&lt;/span> get: github.com&lt;span style="color:#f92672">/&lt;/span>bbb&lt;span style="color:#f92672">/&lt;/span>xxx&lt;span style="color:#f92672">@&lt;/span>v1&lt;span style="color:#ae81ff">.0.2&lt;/span>: parsing &lt;span style="color:#66d9ef">go&lt;/span>.mod:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span> &lt;span style="color:#f92672">module&lt;/span> declares its path &lt;span style="color:#66d9ef">as&lt;/span>: github.com&lt;span style="color:#f92672">/&lt;/span>aaa&lt;span style="color:#f92672">/&lt;/span>xxx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>&lt;span> but was required &lt;span style="color:#66d9ef">as&lt;/span>: github.com&lt;span style="color:#f92672">/&lt;/span>bbb&lt;span style="color:#f92672">/&lt;/span>xxx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>為 Notepad++ 加上 golang 語法高亮</title><link>https://ulagraphy.netlify.com/post/programming-golang-notepad-highlight/golang-highlight-on-notepad/</link><pubDate>Wed, 05 Jan 2022 21:05:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-golang-notepad-highlight/golang-highlight-on-notepad/</guid><description>&lt;p>原生 Notepad++ 沒有支援 golang 的語法，在此紀錄一下要怎麼在 Notepad 中加入自定義的 golang 程式語言的語法高亮(使用暗黑模式 Obsidian)。目前 notepad 使用的版本為 v8.1.9.3。&lt;/p></description></item><item><title>Unable to connect to the server: x509: certificate has expired or is not yet valid</title><link>https://ulagraphy.netlify.com/post/kubernets-ca-expired/</link><pubDate>Sun, 21 Nov 2021 17:36:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/kubernets-ca-expired/</guid><description>&lt;p>在下 &lt;code>kubectl&lt;/code> 時出現 &lt;code>Unable to connect to the server: x509: certificate has expired or is not yet valid&lt;/code> 的錯誤，原因是 kubernetes apiserver 證書已過期，kubernetes 的 apiServer 與 kubelet 的訪問授權證書是一年，官方表示通過這種方式，讓用戶不斷的升級版本。&lt;/p></description></item><item><title>[Linux] SCP 傳送排除特定檔案或資料夾 (如 .git)</title><link>https://ulagraphy.netlify.com/post/os-scp-exclude-specific-file/linux-scp-exclude-files/</link><pubDate>Mon, 08 Nov 2021 11:03:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/os-scp-exclude-specific-file/linux-scp-exclude-files/</guid><description/></item><item><title>[Hexo] 設定可切換的 Dark Mode</title><link>https://ulagraphy.netlify.com/post/blog-hexo-dark-mode/hexo-darkmode/</link><pubDate>Sun, 31 Oct 2021 20:50:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/blog-hexo-dark-mode/hexo-darkmode/</guid><description>&lt;p>在 NexT 主題中引入 Darkmode.js 以支持網頁的 Dark Mode。&lt;/p></description></item><item><title>[Hexo] 升級至 5.x 與 NexT 主題 8.x</title><link>https://ulagraphy.netlify.com/post/blog-hexo-next-upgrade/hexo-and-next-upgrade/</link><pubDate>Sun, 31 Oct 2021 17:23:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/blog-hexo-next-upgrade/hexo-and-next-upgrade/</guid><description>&lt;h2 id="hexo-升級">Hexo 升級
&lt;a class="header-anchor" href="#hexo-%e5%8d%87%e7%b4%9a">&lt;/a>
&lt;/h2>&lt;p>Hexo 版本及系統插件可以透過 npm 實現，請按照下列步驟執行：&lt;/p></description></item><item><title>[Docker] 使用 docker-compose 建立 GitLab (w/ https)</title><link>https://ulagraphy.netlify.com/post/devops-install-gitlab-by-docker-compose/install-gitlab-server-by-docker-compose/</link><pubDate>Fri, 29 Oct 2021 13:48:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-install-gitlab-by-docker-compose/install-gitlab-server-by-docker-compose/</guid><description>&lt;h2 id="安裝-docker--docker-compose">安裝 docker &amp;amp; docker compose
&lt;a class="header-anchor" href="#%e5%ae%89%e8%a3%9d-docker--docker-compose">&lt;/a>
&lt;/h2>&lt;p>請參考之前的筆記&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://ulahsieh.netlify.app/p/install-docker-and-docker-compose-on-centos7/" title="Install Docker &amp;amp;amp; Docker Compose on CentOS" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
Install Docker &amp;amp; Docker Compose on CentOS
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://ulahsieh.netlify.app/p/install-docker-and-docker-compose-on-ubuntu18/" title="Install Docker &amp;amp;amp; Docker Compose on Ubuntu18.04" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
Install Docker &amp;amp; Docker Compose on Ubuntu18.04
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>使用 istio operator 安裝 Istio v1.11</title><link>https://ulagraphy.netlify.com/post/kubernets-install-istio/</link><pubDate>Tue, 26 Oct 2021 20:27:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/kubernets-install-istio/</guid><description>&lt;h2 id="下載-istio">下載 Istio
&lt;a class="header-anchor" href="#%e4%b8%8b%e8%bc%89-istio">&lt;/a>
&lt;/h2></description></item><item><title>[Node-RED] Deploy on Kubernetes</title><link>https://ulagraphy.netlify.com/post/k8s-install-nodered/install-nodered-on-kubernetes/</link><pubDate>Tue, 26 Oct 2021 09:44:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/k8s-install-nodered/install-nodered-on-kubernetes/</guid><description>&lt;p>原先使用 k8s-at-home 的
&lt;a href="https://github.com/k8s-at-home/charts/tree/master/charts/stable/node-red" title="helm chart" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
helm chart
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a> 部屬，但完成後發現 node 安裝後會 deploy 異常，懷疑是 persistence 設定問題，但又不想花時間深究，所以就直接自己寫 yaml 部屬比較快。&lt;/p></description></item><item><title>[Node-RED] mail node 534-5.7.14 Error</title><link>https://ulagraphy.netlify.com/post/programming-node-red-mail-node-send-error/nodered-mail-node-error/</link><pubDate>Tue, 26 Oct 2021 09:39:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-node-red-mail-node-send-error/nodered-mail-node-error/</guid><description>&lt;p>當 google 帳號設置了啟用 &lt;strong>&lt;code>允許安全性較低的應用程式&lt;/code>&lt;/strong>，但 node-red 的 mail node 還是出現 &lt;code>534-5.7.14 Please log in via your web browser and then try again.&lt;/code> 的錯誤。&lt;/p></description></item><item><title>[Ubuntu] Create Application's Shortcut on Desktop</title><link>https://ulagraphy.netlify.com/post/os-ubuntu-create-applications-shortcut-on-desktop/ubuntu-app-shortcut/</link><pubDate>Mon, 25 Oct 2021 14:51:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/os-ubuntu-create-applications-shortcut-on-desktop/ubuntu-app-shortcut/</guid><description>&lt;p>Follow the steps to create the app&amp;rsquo;s shortcut on desktop in Ubuntu.&lt;/p></description></item><item><title>VSCode 免密碼 SSH 到遠端機器</title><link>https://ulagraphy.netlify.com/post/programming-vscode-ssh-remote-without-password/vscode-remote/</link><pubDate>Fri, 08 Oct 2021 17:25:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-vscode-ssh-remote-without-password/vscode-remote/</guid><description/></item><item><title>Data Pipeline 意義、要解決什麼、應具備的功能</title><link>https://ulagraphy.netlify.com/post/data-datapipeline-definition/what-is-data-pipeline/</link><pubDate>Thu, 07 Oct 2021 15:32:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-datapipeline-definition/what-is-data-pipeline/</guid><description>&lt;h2 id="意義">意義
&lt;a class="header-anchor" href="#%e6%84%8f%e7%be%a9">&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>數據管道（Data Pipeline）是一種允許數據通過數據分析過程&lt;span style="background-color:#FCF3CF">從一個位置高效流向另一個位置的軟體，是處理資料流的系統。&lt;/span>這就好比一條傳送帶，它能高效、準確地將數據傳送到流程的每一步。&lt;/li>
&lt;/ul></description></item><item><title>[KVM] virt-install 建立 CentOS 虛擬機</title><link>https://ulagraphy.netlify.com/post/os-kvm-virt-install-centos-vm/kvm-virt-install-centos-vm/</link><pubDate>Thu, 16 Sep 2021 10:52:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/os-kvm-virt-install-centos-vm/kvm-virt-install-centos-vm/</guid><description>&lt;h2 id="安裝-kvm-套件">安裝 KVM 套件
&lt;a class="header-anchor" href="#%e5%ae%89%e8%a3%9d-kvm-%e5%a5%97%e4%bb%b6">&lt;/a>
&lt;/h2>&lt;p>檢查 CPU 是否支援虛擬化&lt;/p></description></item><item><title>Change MetalLB IP Range</title><link>https://ulagraphy.netlify.com/post/kubernets-metallb/</link><pubDate>Thu, 16 Sep 2021 10:30:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/kubernets-metallb/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>&lt;span>&lt;span style="color:#75715e"># note the old IPs allocated to the services&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>&lt;span>kubectl get svc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span>&lt;span>&lt;span style="color:#75715e"># edit config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span>&lt;span>kubectl edit cm -n metallb-system config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span>&lt;span>&lt;span style="color:#75715e"># delete the metallb pods&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span>&lt;span>kubectl -n metallb-system delete pod --all
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span>&lt;span>&lt;span style="color:#75715e"># watch the pods come back up&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span>&lt;span>kubectl -n metallb-system get pods -w
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span>&lt;span>&lt;span style="color:#75715e"># inspect new IPs of services&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span>&lt;span>kubectl get svc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[Terraform] Upgrade to the Latest Version</title><link>https://ulagraphy.netlify.com/post/devops-terraform-upgrade/terraform-upgrage-to-v1/</link><pubDate>Tue, 14 Sep 2021 13:02:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-terraform-upgrade/terraform-upgrage-to-v1/</guid><description>&lt;p>目前的環境使用的 terraform 版本是 v0.13.5&lt;/p>
&lt;p>&lt;img src="https://ulagraphy.netlify.com/imgs/img-lazy-loading.gif" data-src="https://imgur.com/QDUkUEk.png" alt="" />&lt;/p>
&lt;p>參考以下官網說明，如果從 0.13 版要往最新版 v1 升，需要先升到 0.14。&lt;/p></description></item><item><title>[Docker] 建立 golang 中使用到 oracle instant client 的 image</title><link>https://ulagraphy.netlify.com/post/devops-build-golang-and-oracle-instant-client-img/build-golang-and-oracle-instant-client-docker-image/</link><pubDate>Tue, 07 Sep 2021 22:05:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-build-golang-and-oracle-instant-client-img/build-golang-and-oracle-instant-client-docker-image/</guid><description>&lt;p>紀錄一下建立的過程中總共遇到兩個問題：&lt;/p></description></item><item><title>Minikube</title><link>https://ulagraphy.netlify.com/post/kubernets-minikube/</link><pubDate>Sun, 05 Sep 2021 22:17:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/kubernets-minikube/</guid><description>&lt;p>minikube 是一個由 Google 發布的部署單節點的 Kubernetes Cluster 的工具，可以安裝在本機上，支援 Windows 與 Mac Minikube 只有一個 Node (節點)。對於本地實驗可以避免節點不足的困擾；讓開發者可以在本機上輕易架設一個 Kubernetes Cluster，快速上手 Kubernetes 的指令與環境。&lt;/p></description></item><item><title>[nifi] Consume Kafka Topic and Put to MongoDB</title><link>https://ulagraphy.netlify.com/post/data-nifi-consume-kafka-and-put-to-mongodb/nifi-consume-kafka/</link><pubDate>Fri, 03 Sep 2021 15:13:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-nifi-consume-kafka-and-put-to-mongodb/nifi-consume-kafka/</guid><description>&lt;p>這個範例將示範消費指定的 kafka topic，並寫進指定的 MongoDB。&lt;/p></description></item><item><title>解決 scheduler and controller-manager unhealthy state</title><link>https://ulagraphy.netlify.com/post/kubernets-scheduler-controller-manager-unhealthy/</link><pubDate>Tue, 31 Aug 2021 21:15:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/kubernets-scheduler-controller-manager-unhealthy/</guid><description>&lt;h2 id="problem">Problem
&lt;a class="header-anchor" href="#problem">&lt;/a>
&lt;/h2>&lt;p>在嘗試更新 Kubernetes 時，下了下面的 command 取得目前集群的組件狀態：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span>$ kubectl get cs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[Docker] docker build network error</title><link>https://ulagraphy.netlify.com/post/devops-docker-build-network-error/docker-build-network-error/</link><pubDate>Tue, 31 Aug 2021 21:09:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-docker-build-network-error/docker-build-network-error/</guid><description>&lt;p>在 build docker image 時發生 &lt;code>network error&lt;/code> 的錯誤&lt;/p></description></item><item><title>k8s v1.20 nfs-client-provisioner 創建 pvc 時停在 Pending</title><link>https://ulagraphy.netlify.com/post/kubernets-nfs-client-provisioner-pending-in-creating-pvc/</link><pubDate>Sun, 29 Aug 2021 21:47:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/kubernets-nfs-client-provisioner-pending-in-creating-pvc/</guid><description>&lt;p>上次將 K8s 集群從 1.7 升級到 1.20 之後，在創建 pvc 時，發現狀態會一直停留在 Pending，詳細資訊如下：&lt;/p></description></item><item><title>Terraform Connection to Kuberentes Refused Error</title><link>https://ulagraphy.netlify.com/post/devops-terraform-connection-refused-error/terraform-connection-refused-error/</link><pubDate>Sun, 29 Aug 2021 21:40:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-terraform-connection-refused-error/terraform-connection-refused-error/</guid><description>&lt;h2 id="問題">問題
&lt;a class="header-anchor" href="#%e5%95%8f%e9%a1%8c">&lt;/a>
&lt;/h2>&lt;p>在 terrform apply 的時候一直卡在 &lt;code>Error: Post &amp;quot;http://localhost/api/v1/namespaces&amp;quot;: dial tcp [::1]:80: connect: connection refused&lt;/code> 的錯誤&lt;/p></description></item><item><title>Kubernetes 升級紀錄</title><link>https://ulagraphy.netlify.com/post/k8s-upgrade/k8s-upgrade/</link><pubDate>Sun, 22 Aug 2021 21:29:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/k8s-upgrade/k8s-upgrade/</guid><description>&lt;p>紀錄在現有 kubernetes 1.17 集群升級到 1.20 的過程。&lt;/p></description></item><item><title>[Python] 系統效能監測</title><link>https://ulagraphy.netlify.com/post/programming-python-system-performance-monitor/monitor-system-perf-by-python/</link><pubDate>Fri, 15 Jan 2021 15:54:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-python-system-performance-monitor/monitor-system-perf-by-python/</guid><description>&lt;p>監測的指標有 CPU 使用率&amp;amp;頻率、已使用的記憶體、磁碟讀寫 bytes 數、網路收發 bytes 數。會將每秒讀取到的數值存為 csv 檔。&lt;/p>
&lt;h2 id="prerequisite">Prerequisite
&lt;a class="header-anchor" href="#prerequisite">&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>Python3.5+&lt;/li>
&lt;li>psutil&lt;/li>
&lt;/ul></description></item><item><title>[Python] Install Python3.9 on CentOS7</title><link>https://ulagraphy.netlify.com/post/programming-python-install-python39-on-centos7/install-python39-on-centos7/</link><pubDate>Fri, 15 Jan 2021 15:51:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-python-install-python39-on-centos7/install-python39-on-centos7/</guid><description>&lt;h2 id="step1">step1
&lt;a class="header-anchor" href="#step1">&lt;/a>
&lt;/h2>&lt;p>下載依賴工具以及安裝包&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span>$ yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc make libffi-devel wget
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span>$ wget https://www.python.org/ftp/python/3.9.1/Python-3.9.1.tgz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>&lt;span>$ tar zxvf Python-3.9.1.tgz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>ConfigMap 建立及掛載</title><link>https://ulagraphy.netlify.com/post/kubernets-configmap/</link><pubDate>Fri, 08 Jan 2021 14:26:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/kubernets-configmap/</guid><description>&lt;h2 id="configmap">ConfigMap
&lt;a class="header-anchor" href="#configmap">&lt;/a>
&lt;/h2>&lt;p>ConfigMap 以 key-vaule 的方式用來描述系統相關設定，所有與應用程式相關的&lt;strong>非敏感性&lt;/strong>未加密的資訊可放在 ConfigMap 內。而如有敏感性資料，則需透過 &lt;code>Secret&lt;/code>。&lt;/p></description></item><item><title>Kubernetes Object 基本對象介紹</title><link>https://ulagraphy.netlify.com/post/kubernets-object/</link><pubDate>Thu, 07 Jan 2021 17:38:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/kubernets-object/</guid><description>&lt;h2 id="k8s-obejcts">K8s Obejcts
&lt;a class="header-anchor" href="#k8s-obejcts">&lt;/a>
&lt;/h2>&lt;h3 id="常用的基本-objects">常用的基本 objects
&lt;a class="header-anchor" href="#%e5%b8%b8%e7%94%a8%e7%9a%84%e5%9f%ba%e6%9c%ac-objects">&lt;/a>
&lt;/h3>&lt;ul>
&lt;li>Pod&lt;br>
Pod 有兩種類型：普通 Pod 和靜態 Pod (static pod)。靜態 Pod 即不通過 K8S 調度和創建，直接在某個具體的 Node 機器上通過具體的文件來啟動。普通 Pod 則是由 K8S 創建、調度，同時數據存放在 etcd 中。&lt;/li>
&lt;/ul></description></item><item><title>[RabbitMQ] 在 K8s cluster 上安裝叢集</title><link>https://ulagraphy.netlify.com/post/data-rabbitmq-installation-on-k8s/rabbitmq-on-k8s/</link><pubDate>Wed, 30 Dec 2020 17:31:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-rabbitmq-installation-on-k8s/rabbitmq-on-k8s/</guid><description>&lt;h2 id="先決條件">先決條件
&lt;a class="header-anchor" href="#%e5%85%88%e6%b1%ba%e6%a2%9d%e4%bb%b6">&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>kubernetes 1.17 版以上&lt;/li>
&lt;li>RabbitMQ image 3.8.8+&lt;/li>
&lt;/ul></description></item><item><title>[MongoDB] 無法使用 replicaSet 連線問題</title><link>https://ulagraphy.netlify.com/post/database-mongodb-cannot-connect-with-replicaset/mongodb-replicaset-connection-failed/</link><pubDate>Sun, 20 Dec 2020 20:07:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/database-mongodb-cannot-connect-with-replicaset/mongodb-replicaset-connection-failed/</guid><description>&lt;h2 id="前言">前言
&lt;a class="header-anchor" href="#%e5%89%8d%e8%a8%80">&lt;/a>
&lt;/h2>&lt;p>用 docker 跑三個 mongoDB 的 container，做成 replica set cluster。但卻遇到從外面的 shell (跑在本機或其他 server) 加上 replica set 的名字時無法連線的問題 (&lt;code>mongo --host myReplica/mongo1&lt;/code> 失敗)。而不加 replica set 卻都能成功連線 (&lt;code>mongo --host mongo1:30001&lt;/code> 成功)。&lt;/p></description></item><item><title>[MongoDB] Install MongoDB Shell</title><link>https://ulagraphy.netlify.com/post/database-mongodb-install-shell-only/mongodb-install-shell/</link><pubDate>Sun, 20 Dec 2020 20:03:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/database-mongodb-install-shell-only/mongodb-install-shell/</guid><description>&lt;h2 id="install-mongo-shell-only-on-linux">Install Mongo Shell Only on Linux
&lt;a class="header-anchor" href="#install-mongo-shell-only-on-linux">&lt;/a>
&lt;/h2>&lt;p>mongo shell 已經包含在 MongoDB 服務器中。如果已經安裝了 DB，則 mongo shell 將安裝在與服務器 binary 文件相同的位置。 但如果只想從 MongoDB 服務器外單獨下載 mongo shell，可以按照以下步驟將 shell 作為獨立程序安裝：&lt;/p></description></item><item><title>[MongoDB] Install MongoDB Replica Set with Docker</title><link>https://ulagraphy.netlify.com/post/database-mongodb-install-monogodb-replicaset-with-docker/mongodb-install-db-replicaset-with-docker/</link><pubDate>Tue, 15 Dec 2020 22:09:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/database-mongodb-install-monogodb-replicaset-with-docker/mongodb-install-db-replicaset-with-docker/</guid><description>&lt;h2 id="replica-set-installation">Replica Set Installation
&lt;a class="header-anchor" href="#replica-set-installation">&lt;/a>
&lt;/h2>&lt;h3 id="pre-requisties">Pre-requisties
&lt;a class="header-anchor" href="#pre-requisties">&lt;/a>
&lt;/h3>&lt;p>確認是否安裝 Docker，並確認 docker daemon 是否有跑起來&lt;/p></description></item><item><title>[MongoDB] Introduction and Installation on Bare Metal</title><link>https://ulagraphy.netlify.com/post/database-mongodb-intro-and-install-on-baremetal/mongodb-introduction-and-installation/</link><pubDate>Tue, 15 Dec 2020 21:55:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/database-mongodb-intro-and-install-on-baremetal/mongodb-introduction-and-installation/</guid><description>&lt;p>文件導向式(document-oriented)資料庫，儲存文件（document）或物件（object），沒有 row 的概念，取而代之的是 document。&lt;/p></description></item><item><title>[Docker] Install Docker &amp; Docker Compose on CentOS7</title><link>https://ulagraphy.netlify.com/post/devops-install-docker-and-docker-compose-on-centos7/install-docker-and-docker-compose-on-centos7/</link><pubDate>Tue, 15 Dec 2020 21:52:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-install-docker-and-docker-compose-on-centos7/install-docker-and-docker-compose-on-centos7/</guid><description>&lt;h2 id="移除舊版">移除舊版
&lt;a class="header-anchor" href="#%e7%a7%bb%e9%99%a4%e8%88%8a%e7%89%88">&lt;/a>
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span>$ sudo yum remove docker &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span>&lt;span style="color:#ae81ff">&lt;/span> docker-client &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>&lt;span>&lt;span style="color:#ae81ff">&lt;/span> docker-client-latest &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span>&lt;span>&lt;span style="color:#ae81ff">&lt;/span> docker-common &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span>&lt;span>&lt;span style="color:#ae81ff">&lt;/span> docker-latest &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6&lt;/span>&lt;span>&lt;span style="color:#ae81ff">&lt;/span> docker-latest-logrotate &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7&lt;/span>&lt;span>&lt;span style="color:#ae81ff">&lt;/span> docker-logrotate &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8&lt;/span>&lt;span>&lt;span style="color:#ae81ff">&lt;/span> docker-engine
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[Linux] RAID 介紹及實作 (HW RAID &amp; SW RAID)</title><link>https://ulagraphy.netlify.com/post/os-linux-raid-intro-hw-raid-and-sw-raid/linux-raid/</link><pubDate>Mon, 07 Dec 2020 17:40:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/os-linux-raid-intro-hw-raid-and-sw-raid/linux-raid/</guid><description>&lt;p>RAID（Redundant Array of Independent Disks) 磁碟陣列，多個硬碟組合成為一個邏輯磁區(作業系統只會把它當作一個硬碟)。&lt;/p>
&lt;p>&lt;img src="https://ulagraphy.netlify.com/imgs/img-lazy-loading.gif" data-src="https://imgur.com/rJFbWVv.png" alt="" />&lt;/p>
&lt;p>RAID 一般分類成 Software RAID 與 Hardware RAID。&lt;/p></description></item><item><title>[Linux] LVM- 擴大根目錄 &amp; 移除 pv 碟</title><link>https://ulagraphy.netlify.com/post/os-linux-lvm-extend-root-remove-pv/linux-lvm-extend-root-and-remove-pv/</link><pubDate>Mon, 07 Dec 2020 17:26:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/os-linux-lvm-extend-root-remove-pv/linux-lvm-extend-root-and-remove-pv/</guid><description>&lt;h2 id="前言">前言
&lt;a class="header-anchor" href="#%e5%89%8d%e8%a8%80">&lt;/a>
&lt;/h2>&lt;p>結果上次因為 LVM 分的根目錄空間不夠，仗著硬碟多就直接不管空間過剩的 /home，直接找一顆 sdc 掛在相同的根目錄 lv 中。後來系統打算拿一些硬碟做 RAID5，才發現我的系統碟(根目錄)用的是 sda 跟 sdc，跳過了 sdb，強迫症驅使下決定把 sdc 的 pv 移除!!&lt;/p></description></item><item><title>[Linux] LVM</title><link>https://ulagraphy.netlify.com/post/os-linux-lvm/linux-lvm/</link><pubDate>Fri, 27 Nov 2020 17:37:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/os-linux-lvm/linux-lvm/</guid><description>&lt;p>LVM (Logical Volume Manager) 邏輯磁碟管理器，是 Linux 系統 kernel 所提供的功能，在硬碟的分割區上建立邏輯層，可以彈性調整磁碟、分割區與檔案系統的大小。&lt;/p></description></item><item><title>四天三夜沖繩遊記✨</title><link>https://ulagraphy.netlify.com/post/okinawa/</link><pubDate>Sun, 08 Nov 2020 19:00:00 +0800</pubDate><guid>https://ulagraphy.netlify.com/post/okinawa/</guid><description>&lt;p>長大以後都沒有過的全家出國旅行，在這次終於成行了！從六月決議玩開始，我就擔任導遊的角色，著手規劃了整個旅程。來來回回修改不下十次，甚至連小手冊都做了，雖然最後只有自己在看 XD&lt;/p></description></item><item><title>[Node-RED] Production Line Simulation</title><link>https://ulagraphy.netlify.com/post/programming-node-red-simulate-product-line/production-line-simulation-by-nodered/</link><pubDate>Tue, 03 Nov 2020 16:00:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-node-red-simulate-product-line/production-line-simulation-by-nodered/</guid><description/></item><item><title>[CSS] 將重複邊框重疊</title><link>https://ulagraphy.netlify.com/post/programming-overlap-border/css-overlapping-repeat-border/</link><pubDate>Wed, 21 Oct 2020 09:38:46 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-overlap-border/css-overlapping-repeat-border/</guid><description>&lt;p>當兩個 inline-block 元素或是 具有 float 屬性的元素放在同一行時，&lt;strong>左邊元素的右邊邊框與右邊元素的左邊邊框會貼在一起&lt;/strong>，導致原本想設計成 4px 的邊框變成 8px，如下範例；&lt;/p></description></item><item><title>[CSS] 垂直置中問題</title><link>https://ulagraphy.netlify.com/post/programming-css-align-and-middle/css-virtical-and-center-alignment/</link><pubDate>Mon, 19 Oct 2020 09:38:46 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-css-align-and-middle/css-virtical-and-center-alignment/</guid><description>&lt;p>一般在盒內文字想達成垂直置中的效果我們使用 &lt;code>line-height&lt;/code> 將高度設置與父元素一樣即可&lt;/p></description></item><item><title>[CSS] 移入轉換文字內容</title><link>https://ulagraphy.netlify.com/post/programming-css-nav-practice/css-display-font-when-hover/</link><pubDate>Fri, 16 Oct 2020 16:11:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-css-nav-practice/css-display-font-when-hover/</guid><description>&lt;p>移入轉換其實很簡單，不需要算什麼正負位移，只要利用 display: none 屬性就可以輕鬆達成。先來看完成的範例：&lt;/p></description></item><item><title>[CSS] overflow 應用</title><link>https://ulagraphy.netlify.com/post/programming-css-overflow-usecase/css-overflow/</link><pubDate>Thu, 15 Oct 2020 17:48:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-css-overflow-usecase/css-overflow/</guid><description>&lt;h2 id="margin-重疊">Margin 重疊
&lt;a class="header-anchor" href="#margin-%e9%87%8d%e7%96%8a">&lt;/a>
&lt;/h2></description></item><item><title>[Linux] 分割 &amp; 格式化 &amp; 掛載硬碟</title><link>https://ulagraphy.netlify.com/post/os-linux-disk-format/linux-disk-format-and-mount/</link><pubDate>Thu, 15 Oct 2020 10:14:44 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/os-linux-disk-format/linux-disk-format-and-mount/</guid><description>&lt;p>新硬碟放入機器後要做三件事情，分割、格式化、掛載，才可以開始儲存資料；&lt;/p></description></item><item><title>切版紀錄</title><link>https://ulagraphy.netlify.com/post/programming-css-practice/first-css-practice/</link><pubDate>Wed, 14 Oct 2020 10:24:00 +0800</pubDate><guid>https://ulagraphy.netlify.com/post/programming-css-practice/first-css-practice/</guid><description>&lt;p>先放一下 87 分像的比較圖，左邊是自己切的，右邊是題目。&lt;/p></description></item><item><title>[Vue] 解析 vue-admin-template</title><link>https://ulagraphy.netlify.com/post/programming-vue-admin-template1/vue-admin-template/</link><pubDate>Mon, 12 Oct 2020 20:36:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-vue-admin-template1/vue-admin-template/</guid><description>&lt;h2 id="專案結構src">專案結構(src)
&lt;a class="header-anchor" href="#%e5%b0%88%e6%a1%88%e7%b5%90%e6%a7%8bsrc">&lt;/a>
&lt;/h2></description></item><item><title>[Frontend] DOM</title><link>https://ulagraphy.netlify.com/post/programmimg-frontend-dom/html-dom/</link><pubDate>Tue, 06 Oct 2020 15:11:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programmimg-frontend-dom/html-dom/</guid><description>&lt;p>DOM (Document Object Model) 定義了標準 API，使 JavaScript 可以控制瀏覽器的行為與網頁的內容。&lt;/p></description></item><item><title>Real-time &amp; Streaming &amp; Batch</title><link>https://ulagraphy.netlify.com/post/data-realtime-streamming-batch/realtime-streaming-and-batch/</link><pubDate>Tue, 06 Oct 2020 15:08:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-realtime-streamming-batch/realtime-streaming-and-batch/</guid><description/></item><item><title>[Vue] 安裝及基本組成簡介</title><link>https://ulagraphy.netlify.com/post/programming-vue-intro/vue-introduction/</link><pubDate>Tue, 06 Oct 2020 14:59:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-vue-intro/vue-introduction/</guid><description>&lt;h2 id="install-nodejs-and-npm">install nodejs and npm
&lt;a class="header-anchor" href="#install-nodejs-and-npm">&lt;/a>
&lt;/h2>&lt;p>安裝最新版 Nodejs 以及 npm&lt;/p></description></item><item><title>[API] OpenAPI &amp; Swagger 簡介</title><link>https://ulagraphy.netlify.com/post/programming-openapi-intro/openapi-introduction/</link><pubDate>Mon, 05 Oct 2020 14:15:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-openapi-intro/openapi-introduction/</guid><description>&lt;h2 id="openapi">OpenAPI
&lt;a class="header-anchor" href="#openapi">&lt;/a>
&lt;/h2>&lt;p>OpenAPI 是一套 API 規範（OpenAPI Specification ，OAS），用於定義 RESTful API。API 規範使用 YAML 或 JSON 編寫，對於人類和機器來說皆易於閱讀。&lt;/p></description></item><item><title>[Python] Paramiko</title><link>https://ulagraphy.netlify.com/post/programming-python-paramiko/python-paramiko/</link><pubDate>Wed, 30 Sep 2020 14:26:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-python-paramiko/python-paramiko/</guid><description>&lt;h2 id="簡介">簡介
&lt;a class="header-anchor" href="#%e7%b0%a1%e4%bb%8b">&lt;/a>
&lt;/h2>&lt;p>paramiko 是一個使用 SSH2 遠端控制的模組，可以對遠端服務器進行命令或文件操作。有兩個核心組件：&lt;/p></description></item><item><title>[CSS] Margin &amp; Border &amp; Padding 比較</title><link>https://ulagraphy.netlify.com/post/programming-css-margin-border-padding/css-margin-border-padding/</link><pubDate>Wed, 16 Sep 2020 14:49:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-css-margin-border-padding/css-margin-border-padding/</guid><description>&lt;h2 id="比較">比較
&lt;a class="header-anchor" href="#%e6%af%94%e8%bc%83">&lt;/a>
&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>padding&lt;/th>
&lt;th>border&lt;/th>
&lt;th>margin&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>內邊距&lt;/td>
&lt;td>邊距&lt;/td>
&lt;td>外邊距&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>[CSS] float</title><link>https://ulagraphy.netlify.com/post/programming-css-float/css-float/</link><pubDate>Fri, 11 Sep 2020 17:01:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-css-float/css-float/</guid><description>&lt;h2 id="html-normal-flow--inline--block">HTML Normal Flow / inline &amp;amp; block
&lt;a class="header-anchor" href="#html-normal-flow--inline--block">&lt;/a>
&lt;/h2>&lt;p>一般 HTML 的 normal flow 為由左至右及由上至下排列，一般取決於元素的 display 屬性是 &lt;code>inline&lt;/code> 或是 &lt;code>block&lt;/code>&lt;/p>
&lt;ul>
&lt;li>block 元素：區塊元素，在文檔中自己佔一行。如 &lt;code>&amp;lt;div&amp;gt;&lt;/code>、&lt;code>&amp;lt;p&amp;gt;&lt;/code>、&lt;code>&amp;lt;ol&amp;gt;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&lt;/code>、&lt;code>&amp;lt;dl&amp;gt;&amp;lt;dt&amp;gt;&amp;lt;dd&amp;gt;&lt;/code>、&lt;code>&amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&lt;/code>、&lt;code>&amp;lt;form&amp;gt;&lt;/code>。&lt;/li>
&lt;li>inline 元素：行內元素或內聯元素，可以在一行顯示。如 &lt;code>&amp;lt;span&amp;gt;&lt;/code>、&lt;code>&amp;lt;a&amp;gt;&lt;/code>、&lt;code>&amp;lt;i&amp;gt;&lt;/code>、&lt;code>&amp;lt;b&amp;gt;&lt;/code>。&lt;/li>
&lt;li>inline-block 元素；行內塊元素。如 &lt;code>&amp;lt;img&amp;gt;&lt;/code>、 &lt;code>&amp;lt;input&amp;gt;&lt;/code>。&lt;/li>
&lt;/ul></description></item><item><title>[Kafka] server - client &amp; client - server SSL 加密</title><link>https://ulagraphy.netlify.com/post/data-kafka-ssl-encryption/kafka-ssl-encryption/</link><pubDate>Fri, 04 Sep 2020 12:00:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-kafka-ssl-encryption/kafka-ssl-encryption/</guid><description>&lt;p>Kafka 目前支持 SSL、SASL/Kerberos、SASL/PLAIN 三種認證機制，這篇文章將紀錄如何在 Kafka broker 與 clinet 端建立 TLS/SSL 連線。&lt;/p></description></item><item><title>[Zookeeper] Encryption - node-node &amp; client-node</title><link>https://ulagraphy.netlify.com/post/data-zookeeper-encryption3/zookeeper-encryption-3/</link><pubDate>Sun, 30 Aug 2020 10:10:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-zookeeper-encryption3/zookeeper-encryption-3/</guid><description>&lt;h2 id="node-node-encryption">Node-Node Encryption
&lt;a class="header-anchor" href="#node-node-encryption">&lt;/a>
&lt;/h2>&lt;p>節點到節點加密使用 SSL 保護 ZooKeeper server 間的內部連接，加密完全在 ZooKeeper 節點之間完成。默認情況下，Quorom TLS 是禁用的，必須通過編輯所有 server 中的 &lt;code>zoo.cfg&lt;/code> 文件來啟用：&lt;/p></description></item><item><title>[Zookeeper] Encryption - 產生 CA-signed 金鑰</title><link>https://ulagraphy.netlify.com/post/data-zookeeper-encryption2/zookeeper-encryption-2/</link><pubDate>Sun, 30 Aug 2020 09:47:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-zookeeper-encryption2/zookeeper-encryption-2/</guid><description>&lt;h2 id="產生-ca-加簽金鑰">產生 CA 加簽金鑰
&lt;a class="header-anchor" href="#%e7%94%a2%e7%94%9f-ca-%e5%8a%a0%e7%b0%bd%e9%87%91%e9%91%b0">&lt;/a>
&lt;/h2>&lt;ol>
&lt;li>產生 CA 金鑰憑證
在隨意一台機器上產生 CA 憑證，用於為其他金鑰加簽。&lt;/li>
&lt;/ol></description></item><item><title>[Zookeeper] Encryption - 產生 self-signed 金鑰</title><link>https://ulagraphy.netlify.com/post/data-zookeeper-encryption1/zookeeper-encryption-1/</link><pubDate>Sun, 30 Aug 2020 09:38:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-zookeeper-encryption1/zookeeper-encryption-1/</guid><description>&lt;p>Netty 是一個基於 NIO 的 client/server 通信框架，它通過直接使用 NIO 簡化了 Java 應用程序的 network level 通信的複雜度。 此外，Netty 框架內置了對加密（SSL）和身份驗證（CA）的支持。 這些是可選功能，可以單獨打開或關閉。&lt;/p></description></item><item><title>[Kafka] 新增 broker 節點並平衡 topic</title><link>https://ulagraphy.netlify.com/post/data-kafka-topic-rebalancing/kafka-add-broker-and-balance-topic/</link><pubDate>Mon, 24 Aug 2020 14:10:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-kafka-topic-rebalancing/kafka-add-broker-and-balance-topic/</guid><description>&lt;p>在 Kafka 集群中增加 broker 非常方便，只需為其分配唯一的 broker ID，指定集群使用的 zookeeper connect 位址，然後在新服務器上啟動 Kafka。但是，&lt;strong>舊有的 Topic 不會將 Partition 均勻分配到新的節點上，進而造成數據不平衡。&lt;/strong> 因此需要將一些現有數據遷移到這些新機器上進行 rebalancing。&lt;/p>
&lt;p>Kafka 提供了 &lt;code>kafka-reassign-partitions.sh&lt;/code> 工具來進行手動平均分配：&lt;/p></description></item><item><title>[Docker] 在不同電腦中傳 Docker image</title><link>https://ulagraphy.netlify.com/post/devops-copy-docker-image-to-different-host/copy-docker-image-to-other-host/</link><pubDate>Tue, 18 Aug 2020 14:54:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-copy-docker-image-to-different-host/copy-docker-image-to-other-host/</guid><description>&lt;p>通常 docker image 都會放在公開的 repository DockerHub 或是私有的 docker registry 上供使用者 pull，但如果沒有打算公開到網路上或是無架設 repo 的需求，又要在別台電腦上使用 build 好的 docker image 時，就需要使用備份的方式傳遞 image。&lt;/p></description></item><item><title>[Docker] Install Docker &amp; Docker Compose on Ubuntu 18.04</title><link>https://ulagraphy.netlify.com/post/devops-install-docker-and-docker-compose-on-ubuntu/install-docker-and-docker-compose-on-ubuntu18/</link><pubDate>Tue, 18 Aug 2020 14:48:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-install-docker-and-docker-compose-on-ubuntu/install-docker-and-docker-compose-on-ubuntu18/</guid><description>&lt;p>官方 Ubuntu repository 中提供的 Docker 可能不是最新版本。 為確保獲得最新版本，本篇將從官方 Docker 存儲庫安裝。 為此，我們將添加一個新的 package source，從 Docker 中添加 GPG 密鑰以確保下載有效，然後安裝該程序包。&lt;/p></description></item><item><title>[Docker] 限制 log 大小以避免硬碟爆掉</title><link>https://ulagraphy.netlify.com/post/devops-truncate-docker-log/docker-truncate-docker-log/</link><pubDate>Fri, 14 Aug 2020 11:15:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-truncate-docker-log/docker-truncate-docker-log/</guid><description>&lt;p>默認情況下，Docker 會抓所有 container 的標準輸出和標準錯誤 (stdout &amp;amp; stderr)，並將其寫入 &lt;code>/var/lib/docker/containers/[container-id]/[container-id]-json.log&lt;/code> 的 json 文件中。&lt;/p></description></item><item><title>[Zookeeper] Dynamic Configuration</title><link>https://ulagraphy.netlify.com/post/data-zookeeper-dynamic-configuration/zookeeper-dynamic-configuration/</link><pubDate>Wed, 12 Aug 2020 22:10:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-zookeeper-dynamic-configuration/zookeeper-dynamic-configuration/</guid><description>&lt;p>Zookeeper 在 3.5.0 版發行後，支持動態新增節點，不需將整個集群重啟。這篇文章主要紀錄 dymamic configuration 如何實作。&lt;/p></description></item><item><title>[Zookeeper] ACL</title><link>https://ulagraphy.netlify.com/post/data-zookeeper-acl/zookeeper-acl/</link><pubDate>Wed, 12 Aug 2020 20:45:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-zookeeper-acl/zookeeper-acl/</guid><description>&lt;h2 id="aclaccess-control-list">ACL(Access Control List)
&lt;a class="header-anchor" href="#aclaccess-control-list">&lt;/a>
&lt;/h2>&lt;p>Zookeeper 對 znode 操作採用 ACL 進行了存取權限控制，類似於UNIX/Linux的文件權限機制。使用 scheme:id:perm 來標識，主要涵蓋 3 個方面：&lt;/p></description></item><item><title>[Hadoop] HDFS、MapReduce、Yarn 介紹</title><link>https://ulagraphy.netlify.com/post/data-hadoop-intro/hadoop-introduction/</link><pubDate>Wed, 12 Aug 2020 14:32:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-hadoop-intro/hadoop-introduction/</guid><description>&lt;p>Hadoop 是一個能夠儲存並管理大量資料的分散式大數據處理平臺，其包含三大模組：&lt;/p>
&lt;ul>
&lt;li>HDFS&lt;/li>
&lt;li>MapReduce&lt;/li>
&lt;li>Yarn&lt;/li>
&lt;/ul></description></item><item><title>架 Hugo 網站並部署到 Netlify</title><link>https://ulagraphy.netlify.com/post/blog-build-hugo-blog/build-hugo-with-netlify/</link><pubDate>Tue, 11 Aug 2020 21:30:55 +0800</pubDate><guid>https://ulagraphy.netlify.com/post/blog-build-hugo-blog/build-hugo-with-netlify/</guid><description>&lt;h2 id="前言">前言
&lt;a class="header-anchor" href="#%e5%89%8d%e8%a8%80">&lt;/a>
&lt;/h2>&lt;p>第一個 blog 是用功能強大的 Hexo + Github Pages 做出來的，Hexo 基於 Node.js，有功能齊全的主題如 NexT、和豐富的外掛，僅需在配置檔修改參數就可以達到高客製化的需求，連部署到網頁上都僅需要幾個包裝好的 command，非常容易上手。&lt;/p></description></item><item><title>[MySQL] 在 Ubuntu18.04 建立 MySQL NDB Cluster 8.0</title><link>https://ulagraphy.netlify.com/post/database-mysql-ndb-cluster8-on-ubuntu/mysql-ndb-cluster/</link><pubDate>Tue, 11 Aug 2020 11:51:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/database-mysql-ndb-cluster8-on-ubuntu/mysql-ndb-cluster/</guid><description>&lt;h2 id="mysql-ndb-cluster">MySQL NDB Cluster
&lt;a class="header-anchor" href="#mysql-ndb-cluster">&lt;/a>
&lt;/h2>&lt;p>MySQL cluster 將標準的 MySQL server 與內存中叢集式儲存引擎 NDB 集成起來，允許在多個無共享的系統中部署「內存中」資料庫的叢集。&lt;/p></description></item><item><title>[Git] 在同一台電腦中設置多個 Git 帳號</title><link>https://ulagraphy.netlify.com/post/devops-git-multi-account/git-multi-account-on-same-pc/</link><pubDate>Wed, 05 Aug 2020 17:46:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-git-multi-account/git-multi-account-on-same-pc/</guid><description>&lt;h2 id="為每個帳號產生-ssh-key">為每個帳號產生 ssh key
&lt;a class="header-anchor" href="#%e7%82%ba%e6%af%8f%e5%80%8b%e5%b8%b3%e8%99%9f%e7%94%a2%e7%94%9f-ssh-key">&lt;/a>
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span>$ ssh-keygen -t rsa -C &amp;#34;userName@address&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[Zookeeper] fsync &amp; EndOfStreamException 導致 zookeeper shutdown</title><link>https://ulagraphy.netlify.com/post/data-zookeeper-endofstreamexception-error/zookeeper-endofstreamexception/</link><pubDate>Fri, 31 Jul 2020 14:50:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-zookeeper-endofstreamexception-error/zookeeper-endofstreamexception/</guid><description>&lt;h2 id="問題">問題
&lt;a class="header-anchor" href="#%e5%95%8f%e9%a1%8c">&lt;/a>
&lt;/h2>&lt;p>Zookeeper 及 Kafka 在參數保持預設的狀況下，做壓力測試時 Zookeeper 會發生以下錯誤訊息：&lt;/p></description></item><item><title>[CSS] transition + :hover 做一個有質感的 button</title><link>https://ulagraphy.netlify.com/post/programming-css-transition/css-transition-and-hover/</link><pubDate>Fri, 24 Jul 2020 10:11:05 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-css-transition/css-transition-and-hover/</guid><description>&lt;h2 id="transition">transition
&lt;a class="header-anchor" href="#transition">&lt;/a>
&lt;/h2>&lt;p>加上漸變效果，可以放慢某一個元素轉換效果的時間，增加質感。語法如下：
&lt;code>transition: [property] [duration] [timing-function] [delay];&lt;/code>&lt;/p></description></item><item><title>[HTTP] content-type</title><link>https://ulagraphy.netlify.com/post/network-http-content-type/http-contenttype/</link><pubDate>Tue, 21 Jul 2020 21:20:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/network-http-content-type/http-contenttype/</guid><description>&lt;h2 id="定義">定義
&lt;a class="header-anchor" href="#%e5%ae%9a%e7%be%a9">&lt;/a>
&lt;/h2>&lt;p>網際網路媒體類型（Internet media type，也稱為 MIME 類型（MIME type）或內容類型（content type））是給網際網路上傳輸的內容賦予的分類類型。HTTP 透過 &lt;code>content-type&lt;/code> 的header 來表示 request 或 response message 的 body 是用何種方式編碼，伺服器會根據編碼類型使用特定的解析方式，獲取數據流中的數據。&lt;/p></description></item><item><title>[CSS] 文字樣式 &amp; 文字斷行</title><link>https://ulagraphy.netlify.com/post/programming-css-font-style/css-font/</link><pubDate>Mon, 20 Jul 2020 22:47:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-css-font-style/css-font/</guid><description>&lt;h2 id="文字相關的-css-屬性">文字相關的 CSS 屬性
&lt;a class="header-anchor" href="#%e6%96%87%e5%ad%97%e7%9b%b8%e9%97%9c%e7%9a%84-css-%e5%b1%ac%e6%80%a7">&lt;/a>
&lt;/h2>&lt;h3 id="color">color
&lt;a class="header-anchor" href="#color">&lt;/a>
&lt;/h3>&lt;p>文字顏色，值可以是顏色敘述如 &lt;code>red&lt;/code>、
&lt;a href="https://www.ifreesite.com/color/" title="色碼表" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
色碼表
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a> &lt;code>#FF0000&lt;/code>，或是 &lt;code>rgb(255,0 , 0)&lt;/code>。另外 &lt;code>rgba(255, 0, 0, 0.5)&lt;/code> 的 a 表示透明度，值從零到一。&lt;/p></description></item><item><title>[CSS] padding &amp; margin</title><link>https://ulagraphy.netlify.com/post/programming-css-padding-margin/css-padding-margin/</link><pubDate>Mon, 20 Jul 2020 17:07:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-css-padding-margin/css-padding-margin/</guid><description>&lt;h2 id="padding">Padding
&lt;a class="header-anchor" href="#padding">&lt;/a>
&lt;/h2>&lt;p>設定定義元素邊框與元素內容間的距離。&lt;/p></description></item><item><title>[CSS] border &amp; outline</title><link>https://ulagraphy.netlify.com/post/programming-css-border/css-border-outline/</link><pubDate>Mon, 20 Jul 2020 17:05:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-css-border/css-border-outline/</guid><description/></item><item><title>[CSS] background</title><link>https://ulagraphy.netlify.com/post/programming-css-background/css-background/</link><pubDate>Mon, 20 Jul 2020 17:00:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-css-background/css-background/</guid><description/></item><item><title>[SSL] PFX 轉 PEM, CRT, KEY &amp; s_client, s_server 測試</title><link>https://ulagraphy.netlify.com/post/programming-pfx-convert/ssl-pfx-to-pem/</link><pubDate>Mon, 20 Jul 2020 16:48:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-pfx-convert/ssl-pfx-to-pem/</guid><description>&lt;p>憑證發行機構(CA)發出的 PFX 憑證文件，通常將根憑證/中繼憑證、網站憑證(certificate)和網站金鑰(網站私鑰)集合在一起。&lt;/p></description></item><item><title>[CSS] 簡介- Selector &amp; Selector Specificity</title><link>https://ulagraphy.netlify.com/post/programming-css-selector/css-introduction-selector/</link><pubDate>Wed, 15 Jul 2020 22:45:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-css-selector/css-introduction-selector/</guid><description>&lt;h2 id="css">CSS
&lt;a class="header-anchor" href="#css">&lt;/a>
&lt;/h2>&lt;p>Cascading Style Sheets 階層式樣式表，是一種用來為結構化文件（如HTML文件或XML應用）添加樣式（字型、間距和顏色等）的語言。&lt;/p></description></item><item><title>[HTML] 設置 html 標籤達成 SEO</title><link>https://ulagraphy.netlify.com/post/programming-html-seo/html-seo/</link><pubDate>Sun, 12 Jul 2020 22:51:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-html-seo/html-seo/</guid><description>&lt;h2 id="seo">SEO
&lt;a class="header-anchor" href="#seo">&lt;/a>
&lt;/h2>&lt;p>Search Engine Optimization 搜尋引擎優化，是一種透過了解搜尋引擎的運作規則來調整網站，以及提高目的網站在有關搜尋引擎內排名的方式。&lt;/p></description></item><item><title>[HTML] 介紹 &amp; 基礎標籤</title><link>https://ulagraphy.netlify.com/post/programmimg-html-basic/html-introduction/</link><pubDate>Sun, 12 Jul 2020 21:26:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programmimg-html-basic/html-introduction/</guid><description>&lt;h2 id="網頁是什麼">網頁是什麼
&lt;a class="header-anchor" href="#%e7%b6%b2%e9%a0%81%e6%98%af%e4%bb%80%e9%ba%bc">&lt;/a>
&lt;/h2>&lt;p>網頁背後就是一個有結構的純文字檔 html，靠瀏覽器渲染成我們現在看到的畫面。&lt;/p></description></item><item><title>[API] curl 使用指南</title><link>https://ulagraphy.netlify.com/post/programming-api-curl/api-curl/</link><pubDate>Thu, 02 Jul 2020 23:00:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-api-curl/api-curl/</guid><description>&lt;h2 id="curl">curl
&lt;a class="header-anchor" href="#curl">&lt;/a>
&lt;/h2>&lt;p>curl 可以用來請求 Web 服務器、支持文件的上傳和下載。它的名字就是 client + URL 的意思。&lt;/p></description></item><item><title>[API] 簡介及實作 &amp; 資料交換格式 - XML, JSON, SOAP</title><link>https://ulagraphy.netlify.com/post/programming-api/api-data-transform/</link><pubDate>Thu, 02 Jul 2020 21:10:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-api/api-data-transform/</guid><description>&lt;h2 id="api">API
&lt;a class="header-anchor" href="#api">&lt;/a>
&lt;/h2>&lt;p>Application Programming Interface 應用程式介面，其中『介面』就是溝通的管道，比如說 USB 隨身碟的介面就是 USB．所有電腦以及 USB 隨身硬碟的廠商只要按照 USB 的規則製造就能使用此介面去溝通。&lt;/p></description></item><item><title>[Java] Install Java on Win11</title><link>https://ulagraphy.netlify.com/post/programming-install-java11-on-win10/install-java10-on-win11/</link><pubDate>Wed, 01 Jul 2020 17:41:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-install-java11-on-win10/install-java10-on-win11/</guid><description>&lt;h2 id="選擇-java-版本">選擇 Java 版本
&lt;a class="header-anchor" href="#%e9%81%b8%e6%93%87-java-%e7%89%88%e6%9c%ac">&lt;/a>
&lt;/h2>&lt;p>Java 更新速度之快，截至今天已經出到 Java 14 了！本來是想隨波逐流的裝 Java 8 但參考了這篇
&lt;a href="https://medium.com/swlh/why-do-people-stick-with-java8-acb95ef65f0c" title="文章" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
文章
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>後，還是決定裝 11。&lt;/p></description></item><item><title>[Java] JVM 架構</title><link>https://ulagraphy.netlify.com/post/programming-java-jvm/java-jvm-structure/</link><pubDate>Wed, 01 Jul 2020 16:41:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-java-jvm/java-jvm-structure/</guid><description>&lt;p>前一篇介紹到 Java 程式經過編譯後會產生 .class 檔 (bytecode)，只能運行在 JVM 上，而 JVM 在運算時，如同電腦需要記憶體儲存運算所需的各種資料及指令，這篇文章將紀錄 JVM 的架構。&lt;/p></description></item><item><title>[Java] What are JDK, JRE, JDM ?</title><link>https://ulagraphy.netlify.com/post/programming-java-jdk-jre/java-jdk-jre-jvm-intro/</link><pubDate>Wed, 01 Jul 2020 16:38:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-java-jdk-jre/java-jdk-jre-jvm-intro/</guid><description>&lt;h2 id="比較">比較
&lt;a class="header-anchor" href="#%e6%af%94%e8%bc%83">&lt;/a>
&lt;/h2>&lt;p>&lt;strong>JDK（Java Development Kit，Java開發工具包）&lt;/strong>&lt;br>
是用來編譯、調試 Java 程序的開發工具包。組成包含 Java工具（javac/java/jdb等）和 Java 基礎的類庫。&lt;/p></description></item><item><title>[TCP/IP] 應用層 - HTTP</title><link>https://ulagraphy.netlify.com/post/netwrok-http/tcpip-http/</link><pubDate>Wed, 01 Jul 2020 10:24:00 +0800</pubDate><guid>https://ulagraphy.netlify.com/post/netwrok-http/tcpip-http/</guid><description>&lt;h2 id="http">HTTP
&lt;a class="header-anchor" href="#http">&lt;/a>
&lt;/h2>&lt;p>HyperText Transfer Protocol 超文本傳輸協定，是網頁的基礎通訊協定，基於 client-server 架構來 request-reponse，用來在 client 以及 server 間傳遞超媒體文件(如 HTML) 。&lt;/p></description></item><item><title>[TCP/IP] 傳輸層 - TCP , UDP</title><link>https://ulagraphy.netlify.com/post/network-tcp-udp/tcp-upd/</link><pubDate>Tue, 30 Jun 2020 23:30:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/network-tcp-udp/tcp-upd/</guid><description>&lt;h2 id="傳輸層-transport-layer">傳輸層 Transport Layer
&lt;a class="header-anchor" href="#%e5%82%b3%e8%bc%b8%e5%b1%a4-transport-layer">&lt;/a>
&lt;/h2>&lt;h3 id="port">Port
&lt;a class="header-anchor" href="#port">&lt;/a>
&lt;/h3>&lt;p>連接埠/端口。有了網際網路層的 IP 位址之後，就可以把檔案傳輸到目標電腦上，但是一台電腦上可能有許多不同的應用程式，沒辦法知道這個檔案要由電腦上的哪一個應用程式處理，因此出現了 port。使用 port 就可以區別這些服務，如果有服務的程式在監聽這個埠號的話，就會收到 request。&lt;/p></description></item><item><title>[TCP/IP] 網路層 - IP</title><link>https://ulagraphy.netlify.com/post/network-ip/tcpip-ip/</link><pubDate>Tue, 30 Jun 2020 23:20:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/network-ip/tcpip-ip/</guid><description>&lt;h2 id="網路層-network-layer">網路層 Network Layer
&lt;a class="header-anchor" href="#%e7%b6%b2%e8%b7%af%e5%b1%a4-network-layer">&lt;/a>
&lt;/h2>&lt;h3 id="ip">IP
&lt;a class="header-anchor" href="#ip">&lt;/a>
&lt;/h3>&lt;p>Internet Protocol，網絡上每一個節點都有一個獨立的 IP Address，當裝置連接網路時會被分配 IP，用以標識。通過 IP 位址，裝置間可以互相知道對方並通訊。&lt;br>
有 IPv4 及 IPv6 兩個版本，IPv6 是為了要解決 IPv4 不足的問題。&lt;/p></description></item><item><title>[TCP/IP] 網路基礎概念- 傳紙條、TCP/IP 四層概述</title><link>https://ulagraphy.netlify.com/post/network-tcpip/tcpip-4layer/</link><pubDate>Tue, 30 Jun 2020 23:04:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/network-tcpip/tcpip-4layer/</guid><description>&lt;h2 id="網路">網路
&lt;a class="header-anchor" href="#%e7%b6%b2%e8%b7%af">&lt;/a>
&lt;/h2>&lt;p>網路的目的就是為了溝通，可以把整個網路運作想像成傳紙條。&lt;/p></description></item><item><title>[Javascript] ES6 新語法 &amp; babel 轉譯器簡介</title><link>https://ulagraphy.netlify.com/post/programming-js-es6-and-babel/js-es6-and-babel/</link><pubDate>Sat, 27 Jun 2020 13:39:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-js-es6-and-babel/js-es6-and-babel/</guid><description>&lt;h2 id="ecmascript">ECMAScript
&lt;a class="header-anchor" href="#ecmascript">&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://zh.wikipedia.org/wiki/ECMAScript" title="ECMAScript" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
ECMAScript
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>是一個開發標準(規範)，而 Javascript 就是根據此標準來實作。
ES6 指的是 ECMAScript 第六版，於 2015 年發布，所以又稱 ES2015。ES6 包含了許多新的語法，將於下面用 Javascript 介紹。&lt;/p></description></item><item><title>[Node.js] 單元測試 &amp; Jest 簡介</title><link>https://ulagraphy.netlify.com/post/programming-node-jest-ut/node-unit-test-jest/</link><pubDate>Thu, 25 Jun 2020 22:11:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-node-jest-ut/node-unit-test-jest/</guid><description>&lt;h2 id="單元測試">單元測試
&lt;a class="header-anchor" href="#%e5%96%ae%e5%85%83%e6%b8%ac%e8%a9%a6">&lt;/a>
&lt;/h2>&lt;p>單元測試（Unit Testing），是針對專案中每一個單一功能做測試。一般專案裡的最小單位是一個 function，而通常我們在寫完程式後都是用 console.log 來確認呼叫的結果：&lt;/p></description></item><item><title>[Node.js] module、require &amp; exports</title><link>https://ulagraphy.netlify.com/post/programming-node-basic/node-module-require-and-exports/</link><pubDate>Thu, 25 Jun 2020 22:03:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-node-basic/node-module-require-and-exports/</guid><description>&lt;h2 id="modulepackageliberary">Module/Package/Liberary
&lt;a class="header-anchor" href="#modulepackageliberary">&lt;/a>
&lt;/h2>&lt;p>當程式裡面有很多個功能，可以把它拆開成一個一個的模組，之後才方便維護，因為彼此的相依性被獨立開來了，而且同一個功能不用一直重寫，只要把 module 匯入就好。&lt;/p></description></item><item><title>[Node.js] npm 簡介</title><link>https://ulagraphy.netlify.com/post/programming-node-npm/node-npm-intro/</link><pubDate>Thu, 25 Jun 2020 16:44:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-node-npm/node-npm-intro/</guid><description>&lt;h2 id="npm">npm
&lt;a class="header-anchor" href="#npm">&lt;/a>
&lt;/h2>&lt;p>Node Package Manager，package 就是別人寫好的套件，npm 就是幫你管理 Node.js 套件的管理系統。裝完 Node.js 就會自動把 npm 裝好，下 &lt;code>npm -v&lt;/code> 可以查看版本。&lt;/p></description></item><item><title>[Node.js] eslint &amp; husky 簡介</title><link>https://ulagraphy.netlify.com/post/programmimg-node-eslint-husky/eslint-husky/</link><pubDate>Sat, 20 Jun 2020 22:56:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programmimg-node-eslint-husky/eslint-husky/</guid><description>&lt;h2 id="eslint-npm-module">eslint (npm module)
&lt;a class="header-anchor" href="#eslint-npm-module">&lt;/a>
&lt;/h2>&lt;p>eslint 等於 es + lint，用來檢查 Javascript coding style 的工具。&lt;/p>
&lt;ul>
&lt;li>es = ECMAScript, Javascript 的標準&lt;/li>
&lt;li>lint = 一個語法檢查的工具&lt;/li>
&lt;/ul></description></item><item><title>新手刷題前應該知道的事</title><link>https://ulagraphy.netlify.com/post/programming-lidimy-alg101-note/lidimy-alg101-note/</link><pubDate>Fri, 19 Jun 2020 21:42:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-lidimy-alg101-note/lidimy-alg101-note/</guid><description>&lt;p>這篇文章是 Lidemy Mentor Program 第二周觀看 ALG101 先別急著寫 Leetcode 的筆記。&lt;/p>
&lt;h2 id="新手寫題目怎麼開始">新手寫題目怎麼開始
&lt;a class="header-anchor" href="#%e6%96%b0%e6%89%8b%e5%af%ab%e9%a1%8c%e7%9b%ae%e6%80%8e%e9%ba%bc%e9%96%8b%e5%a7%8b">&lt;/a>
&lt;/h2>&lt;ol>
&lt;li>先想解法&lt;/li>
&lt;li>在把解法轉成程式碼
而不是著急的直接邊寫程式碼邊解，要先有一個架構之後再去想怎麼轉換成 code。&lt;/li>
&lt;/ol></description></item><item><title>[Javascript] 函式、內建函式</title><link>https://ulagraphy.netlify.com/post/programming-js-basic-3/js-basic-3/</link><pubDate>Wed, 17 Jun 2020 22:35:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-js-basic-3/js-basic-3/</guid><description>&lt;h2 id="函式-functiton">函式 functiton
&lt;a class="header-anchor" href="#%e5%87%bd%e5%bc%8f-functiton">&lt;/a>
&lt;/h2>&lt;p>基本函式結構&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">函式名稱&lt;/span>(&lt;span style="color:#a6e22e">參數&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">回傳值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>傳入參數可以一個或多個，可以是值、變數、陣列、物件或是函式&lt;/li>
&lt;li>回傳值可以零個或一個，可以是一個值、變數、陣列、物件或是函式&lt;/li>
&lt;li>呼叫函式直接打 &lt;code>函式名稱()&lt;/code> ；如果有帶參數，將引數置於括號中 &lt;code>函式名稱(引數)&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>[Javascript] 條件句、迴圈</title><link>https://ulagraphy.netlify.com/post/programming-js-basic-2/js-basic-2/</link><pubDate>Wed, 17 Jun 2020 22:23:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-js-basic-2/js-basic-2/</guid><description>&lt;h2 id="ifelse-statement">if/else statement
&lt;a class="header-anchor" href="#ifelse-statement">&lt;/a>
&lt;/h2>&lt;p>使用 if/else 來判斷狀況，用法如下：&lt;/p>
&lt;h3 id="if">if&amp;hellip;
&lt;a class="header-anchor" href="#if">&lt;/a>
&lt;/h3>&lt;p>可加入運算於判斷條件句內&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">num&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">13&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span>&lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#a6e22e">num&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;num is multiple of five&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span>&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[Javascript] runtime、運算子、變數</title><link>https://ulagraphy.netlify.com/post/programming-js-basic-1/js-basic-1/</link><pubDate>Tue, 16 Jun 2020 19:03:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-js-basic-1/js-basic-1/</guid><description>&lt;h2 id="javascript-runtime">Javascript Runtime
&lt;a class="header-anchor" href="#javascript-runtime">&lt;/a>
&lt;/h2>&lt;p>Javascript 需要有執行環境（Runtime）才能執行，最早期只能跑在瀏覽器上面，我們會透過 Javasrcipt 去操控瀏覽器畫面上的東西，例如表單驗證… 等等。&lt;br>
但 &lt;strong>Node.js&lt;/strong> 誕生後，就可以當成是 JS 除了瀏覽器外的 runtime，下載 Node.js 後便可以直接在 CMD 內下指令&lt;/p>
&lt;p>&lt;code>$ node &amp;lt; fileName.js &amp;gt;&lt;/code>&lt;/p></description></item><item><title>程式初學者基礎知識 - CLI, 計概, 網路, session &amp; cookie, 演算法</title><link>https://ulagraphy.netlify.com/post/programming-lidimy-cs101-note/lidimy-cs101-note/</link><pubDate>Sun, 14 Jun 2020 22:28:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-lidimy-cs101-note/lidimy-cs101-note/</guid><description>&lt;p>這篇文章是紀錄程式實驗導師第一周觀看課程 CS101 的筆記，主要闡述了程式初學者該具備的基礎知識，包含 Coding 簡介、前後端介紹，以及一些計算機概論。&lt;/p>
&lt;h2 id="到底寫程式是什麼">到底寫程式是什麼
&lt;a class="header-anchor" href="#%e5%88%b0%e5%ba%95%e5%af%ab%e7%a8%8b%e5%bc%8f%e6%98%af%e4%bb%80%e9%ba%bc">&lt;/a>
&lt;/h2>&lt;p>&lt;code>Coding&lt;/code> 的目的就是要跟電腦溝通，要對電腦下指令，讓電腦照著指示做。&lt;br>
那為什麼需要程式碼呢？ 因為電腦只看得懂以 0 和 1 組成的機器語言，且它針對各種不同的事都只按照同一個標準去做事（標準化），例如不同廠牌的 USB 須按照 USB 標準去生產，而電腦只須懂這個標準就好。
所以寫程式的標準就是程式碼，而市面上的各種程式語言最終都會轉換成電腦懂得機器語言。&lt;/p></description></item><item><title>[Git] Basic Git (3) 一些狀況劇</title><link>https://ulagraphy.netlify.com/post/devops-git-basic-3/git-basic-3/</link><pubDate>Sat, 13 Jun 2020 10:45:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-git-basic-3/git-basic-3/</guid><description>&lt;h2 id="想改最後一次的-commit-message">想改最後一次的 commit message
&lt;a class="header-anchor" href="#%e6%83%b3%e6%94%b9%e6%9c%80%e5%be%8c%e4%b8%80%e6%ac%a1%e7%9a%84-commit-message">&lt;/a>
&lt;/h2>&lt;p>在本地端 git commit 後發現 commit message 打錯了，只要下 &lt;code>$ git commit --amend&lt;/code>即可進入 vim 編輯器做修改。&lt;/p></description></item><item><title>[Git] Basic Git (2) - Branch &amp; GitHub</title><link>https://ulagraphy.netlify.com/post/devops-git-basic-2/git-basic-2/</link><pubDate>Sat, 13 Jun 2020 09:18:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-git-basic-2/git-basic-2/</guid><description>&lt;h2 id="branch-概念">branch 概念
&lt;a class="header-anchor" href="#branch-%e6%a6%82%e5%bf%b5">&lt;/a>
&lt;/h2>&lt;p>一般在線性開發時會是以下這樣：&lt;/p>
&lt;p>&lt;img src="https://ulagraphy.netlify.com/imgs/img-lazy-loading.gif" data-src="https://imgur.com/yxIhSIN.png" alt="" />&lt;/p>
&lt;p>當在開發新功能時，發現當下開發的版本有舊有的 bug，此時如果一邊開發一邊改 bug 可能會導致產出的東西有衝突。&lt;br>
而如果引入分支 branch，讓開發新功能以及 debug 兩邊各自獨立完成，而後再進行合併，就可以把工作乾淨地切割開來。目的是為了保持主枝幹的穩定，因為在開發新功能的時候不可能隨時保持穩定狀態，所以在確定穩定前都不會影響到主幹。&lt;/p>
&lt;p>&lt;img src="https://ulagraphy.netlify.com/imgs/img-lazy-loading.gif" data-src="https://imgur.com/KGfAOUW.png" alt="" />&lt;/p></description></item><item><title>[Git] Basic Git (1) - Intro &amp; Init, add, commit, status...</title><link>https://ulagraphy.netlify.com/post/devops-git-basic-1/git-basic-1/</link><pubDate>Sat, 13 Jun 2020 07:15:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-git-basic-1/git-basic-1/</guid><description>前言 在沒有版本控制系統前，如果有一個常常在修改的檔案，又想保留每個版本狀態時，我們常會在編輯檔案前複製一個備份，時間久了就會變得非常不便且難</description></item><item><title>[Kafka] 建立 Kafka Cluster</title><link>https://ulagraphy.netlify.com/post/data-kafka-cluster/kafka-cluster/</link><pubDate>Wed, 10 Jun 2020 20:52:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-kafka-cluster/kafka-cluster/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span>$ cd /opt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span>$ wget &lt;span style="color:#e6db74">&amp;#34;http://ftp.tc.edu.tw/pub/Apache/kafka/2.4.1/kafka_2.12-2.4.1.tgz&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>&lt;span>$ sudo tar zxvf kafka_2.12-2.4.1.tgz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span>&lt;span>$ sudo mv kafka_2.12-2.4.1 kafka
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[Kafka] Kafka at a Glance</title><link>https://ulagraphy.netlify.com/post/data-kafka-intro/kafka-at-glance/</link><pubDate>Tue, 09 Jun 2020 10:43:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-kafka-intro/kafka-at-glance/</guid><description>&lt;p>Kafka 是由 LinkedIn 開發而後釋出給 Apache 的一個開源 streaming message queue (消息佇列)，由Scala和Java編寫，目前是 Hadoop ecosystem 中的一員。&lt;/p></description></item><item><title>[Coldplay] Everglow</title><link>https://ulagraphy.netlify.com/post/coldplay-everglow/</link><pubDate>Mon, 08 Jun 2020 19:30:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/coldplay-everglow/</guid><description>Oh, they say people come Say people go 他們說人來人去 This particular diamond was extra special 這特別的鑽石格外特別 And though you might be gone And the world may not know 儘管你可能消失，且世界也可能不會知道 Still I see you, celestial 我在天國</description></item><item><title>[Zookeeper] 建立 Zookeeper Cluster</title><link>https://ulagraphy.netlify.com/post/data-build-zookeeper-cluster/zookeeper-build-cluster/</link><pubDate>Thu, 30 Apr 2020 20:55:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-build-zookeeper-cluster/zookeeper-build-cluster/</guid><description>&lt;p>Zookeeper 提供分散式應用程式中的協調服務，是 Hadoop 生態系產品中不可或缺的角色。
Zookeeper 叢集適合搭建在奇數臺機器上，目的是為了提高可用性以及維持選舉制度的運行。[1]&lt;/p></description></item><item><title>[Javascript] Debugging in Chrome</title><link>https://ulagraphy.netlify.com/post/programming-js-debugging-in-chrome/js-debugging-in-chrome/</link><pubDate>Sun, 12 Apr 2020 21:13:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-js-debugging-in-chrome/js-debugging-in-chrome/</guid><description>&lt;p>Debugging 是指在一個腳本中找出錯誤。市面上大宗瀏覽器都支持開發人員工具，能幫助開發者一步步地追蹤代碼，查看當前實際運行情況。
此篇文章以常用的 Google Chrome 做說明－&lt;/p></description></item><item><title>[Git] Build a Git Server on Ubuntu</title><link>https://ulagraphy.netlify.com/post/devops-git-server/build-git-server-on-ubuntu/</link><pubDate>Sat, 14 Mar 2020 19:48:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-git-server/build-git-server-on-ubuntu/</guid><description>&lt;h2 id="step-1-電腦vm-環境設置">Step 1: 電腦/VM 環境設置
&lt;a class="header-anchor" href="#step-1-%e9%9b%bb%e8%85%a6vm-%e7%92%b0%e5%a2%83%e8%a8%ad%e7%bd%ae">&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>作業系統選擇 Ubuntu 或其他 Linux 版本&lt;/li>
&lt;li>開啟 SSH port&lt;/li>
&lt;li>新增使用者帳號 git&lt;/li>
&lt;/ul></description></item><item><title>[SSL] 用 Let's Encrypt &amp; Certbot 為網站加密</title><link>https://ulagraphy.netlify.com/post/programmimg-nginx-certbot/ssl-letsencrypt/</link><pubDate>Thu, 13 Feb 2020 21:32:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programmimg-nginx-certbot/ssl-letsencrypt/</guid><description>&lt;p>在講求資訊安全的時代，大部分的網站幾乎都使用 https 做為網站的通訊協定，這篇文章將記錄怎麼使用免費的第三方憑證 Let&amp;rsquo;s Encrypt &amp;amp; Certbot，為網站添加安全保障。&lt;/p></description></item><item><title>[OS] 作業系統概論</title><link>https://ulagraphy.netlify.com/post/os-introduction/os-introduction/</link><pubDate>Sun, 02 Feb 2020 18:05:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/os-introduction/os-introduction/</guid><description>&lt;h2 id="程式程序執行緒">程式、程序、執行緒
&lt;a class="header-anchor" href="#%e7%a8%8b%e5%bc%8f%e7%a8%8b%e5%ba%8f%e5%9f%b7%e8%a1%8c%e7%b7%92">&lt;/a>
&lt;/h2>&lt;h3 id="程式program">程式(Program)
&lt;a class="header-anchor" href="#%e7%a8%8b%e5%bc%8fprogram">&lt;/a>
&lt;/h3>&lt;p>尚未載進記憶體的&lt;strong>靜態程式碼集合&lt;/strong>。&lt;/p></description></item><item><title>[Golang] Function</title><link>https://ulagraphy.netlify.com/post/programming-golang-function/golang-function/</link><pubDate>Sat, 04 Jan 2020 20:02:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-golang-function/golang-function/</guid><description>&lt;h2 id="introduction">Introduction
&lt;a class="header-anchor" href="#introduction">&lt;/a>
&lt;/h2>&lt;p>在 Go 裡，function 是一等公民，它可以作為另一 function 中的參數傳遞、可以將它指派給一變數、也可以在另一個 function 中當作 return 值。&lt;/p>
&lt;p>函式可以具名也可以匿名(anonynous function)；&lt;/p></description></item><item><title>[Golang] Array v.s. Slice</title><link>https://ulagraphy.netlify.com/post/golang-array-and-slice/golang-array-and-slice/</link><pubDate>Mon, 30 Dec 2019 20:41:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/golang-array-and-slice/golang-array-and-slice/</guid><description>&lt;h2 id="array">Array
&lt;a class="header-anchor" href="#array">&lt;/a>
&lt;/h2>&lt;p>陣列的長度固定，且為陣列類型的一部份。
（&lt;code>[4]int&lt;/code> 以及 &lt;code>[5]int&lt;/code> 為兩種獨立且不相容的不同type）&lt;/p>
&lt;h3 id="宣告及初始化array">宣告及初始化array
&lt;a class="header-anchor" href="#%e5%ae%a3%e5%91%8a%e5%8f%8a%e5%88%9d%e5%a7%8b%e5%8c%96array">&lt;/a>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>&lt;span>&lt;span style="color:#75715e">// var [len]Type，無初始化值，則初始值為zero value
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">arr1&lt;/span> [&lt;span style="color:#ae81ff">2&lt;/span>]&lt;span style="color:#66d9ef">int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span>&lt;span>&lt;span style="color:#75715e">// var [len]Type，並給初始值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span>&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">arr2&lt;/span> = [&lt;span style="color:#ae81ff">2&lt;/span>]&lt;span style="color:#66d9ef">int&lt;/span>{&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span>&lt;span>&lt;span style="color:#75715e">// var [...]Type，讓complier自行計算長度
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span>&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">arr3&lt;/span> = [&lt;span style="color:#f92672">...&lt;/span>]&lt;span style="color:#66d9ef">int&lt;/span>{&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span>&lt;span>&lt;span style="color:#75715e">// := [len]Type，在func中使用簡短宣告符號，無給初始值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span>&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">arr4&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> [&lt;span style="color:#ae81ff">2&lt;/span>]&lt;span style="color:#66d9ef">int&lt;/span>{}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span>&lt;span>&lt;span style="color:#75715e">// := [len]Type，並給初始值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15&lt;/span>&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">arr5&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> [&lt;span style="color:#ae81ff">2&lt;/span>]&lt;span style="color:#66d9ef">int&lt;/span>{}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17&lt;/span>&lt;span>&lt;span style="color:#75715e">// := [...]Type，讓complier自行計算長度
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18&lt;/span>&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">arr6&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> [&lt;span style="color:#f92672">...&lt;/span>]&lt;span style="color:#66d9ef">int&lt;/span>{&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[Golang] Method</title><link>https://ulagraphy.netlify.com/post/programming-golang-method/golang-method/</link><pubDate>Sun, 29 Dec 2019 05:06:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-golang-method/golang-method/</guid><description>&lt;style type="text/css">.notice{--root-color:#444;--root-background:#eff;--title-color:#fff;--title-background:#7bd;--warning-title:#c33;--warning-content:#fee;--info-title:#fb7;--info-content:#fec;--note-title:#6be;--note-content:#e7f2fa;--tip-title:#5a5;--tip-content:#efe}@media (prefers-color-scheme:dark){.notice{--root-color:#ddd;--root-background:#eff;--title-color:#fff;--title-background:#7bd;--warning-title:#800;--warning-content:#400;--info-title:#a50;--info-content:#420;--note-title:#069;--note-content:#023;--tip-title:#363;--tip-content:#121}}body.dark .notice{--root-color:#ddd;--root-background:#eff;--title-color:#fff;--title-background:#7bd;--warning-title:#800;--warning-content:#400;--info-title:#a50;--info-content:#420;--note-title:#069;--note-content:#023;--tip-title:#363;--tip-content:#121}.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:var(--root-color);background:var(--root-background)}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:var(--title-color);background:var(--title-background)}.notice.warning .notice-title{background:var(--warning-title)}.notice.warning{background:var(--warning-content)}.notice.info .notice-title{background:var(--info-title)}.notice.info{background:var(--info-content)}.notice.note .notice-title{background:var(--note-title)}.notice.note{background:var(--note-content)}.notice.tip .notice-title{background:var(--tip-title)}.notice.tip{background:var(--tip-content)}.icon-notice{display:inline-flex;align-self:center;margin-right:8px}.icon-notice img,.icon-notice svg{height:1em;width:1em;fill:currentColor}.icon-notice img,.icon-notice.baseline svg{top:.125em;position:relative}&lt;/style>
&lt;div>&lt;svg width="0" height="0" display="none" xmlns="http://www.w3.org/2000/svg">&lt;symbol id="tip-notice" viewBox="0 0 512 512" preserveAspectRatio="xMidYMid meet">&lt;path d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"/>&lt;/symbol>&lt;symbol id="note-notice" viewBox="0 0 512 512" preserveAspectRatio="xMidYMid meet">&lt;path d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"/>&lt;/symbol>&lt;symbol id="warning-notice" viewBox="0 0 576 512" preserveAspectRatio="xMidYMid meet">&lt;path d="M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"/>&lt;/symbol>&lt;symbol id="info-notice" viewBox="0 0 512 512" preserveAspectRatio="xMidYMid meet">&lt;path d="M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z"/>&lt;/symbol>&lt;/svg>&lt;/div>&lt;div class="notice info" >
&lt;p class="first notice-title">&lt;span class="icon-notice baseline">&lt;svg>&lt;use href="#info-notice">&lt;/use>&lt;/svg>&lt;/span>Info&lt;/p>&lt;p>Golang is all about TYPE!&lt;/p>&lt;/div>
&lt;h2 id="定義">定義
&lt;a class="header-anchor" href="#%e5%ae%9a%e7%be%a9">&lt;/a>
&lt;/h2>&lt;p>method是一個額外帶有receiver(接收器)的fuction，receiver為某type的變量，而type的型態可以是struct或是non-struct&lt;/p></description></item><item><title>[Hexo] NexT 更改字體</title><link>https://ulagraphy.netlify.com/post/hexo-font/</link><pubDate>Mon, 23 Dec 2019 15:56:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/hexo-font/</guid><description>&lt;p>Blog最重要的組成為文章，所以第一篇就決定來記錄我怎麼改網站的文字字體。&lt;/p>
&lt;p>使用的方法是載入Google Font API -&lt;br>
&lt;a href="https://fonts.google.com/" title="Google Font" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
Google Font
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a> 是一個包含近千種開源字體的字型庫，使用者除了可以免費下載外，還能在網站上自動產生程式碼，將字體內嵌到自己的網站上使用。&lt;/p></description></item></channel></rss>