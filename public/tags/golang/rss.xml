<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Golang on UlaGraphy</title><link>https://ulagraphy.netlify.com/tags/golang/</link><description>Recent content in Golang on UlaGraphy</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 05 Jun 2023 17:19:00 +0000</lastBuildDate><atom:link href="https://ulagraphy.netlify.com/tags/golang/rss.xml" rel="self" type="application/rss+xml"/><item><title>[Golang &amp; Node.js] Access Kubernetes Out of the Cluster</title><link>https://ulagraphy.netlify.com/post/golang-and-nodejs-client-access-k8s/</link><pubDate>Mon, 05 Jun 2023 17:19:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/golang-and-nodejs-client-access-k8s/</guid><description/></item><item><title>[Golang] Render Image in HTML</title><link>https://ulagraphy.netlify.com/post/golang-render-img-in-html/</link><pubDate>Mon, 05 Jun 2023 16:19:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/golang-render-img-in-html/</guid><description>&lt;h2 id="tldr">TL;DR
&lt;a class="header-anchor" href="#tldr">&lt;/a>
&lt;/h2>&lt;p>紀錄怎麼在 golang 的 gin api server 回傳帶有圖片的 api。&lt;/p></description></item><item><title>[Golang] 使用 winrm 下多行指令操作遠端機器</title><link>https://ulagraphy.netlify.com/post/golang-winrm-multiple-command-sample-code/</link><pubDate>Sat, 28 Jan 2023 08:19:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/golang-winrm-multiple-command-sample-code/</guid><description>&lt;h2 id="tl-dr">TL; DR
&lt;a class="header-anchor" href="#tl-dr">&lt;/a>
&lt;/h2>&lt;p>使用
&lt;a href="https://github.com/masterzen/winrm" title="masterzen/winrm" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
masterzen/winrm
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a> 套件透過 winrm protocal 遠端連線至指定機器並下 powershell 指令操作。&lt;/p></description></item><item><title>[Golang] 查詢 SQL DB 的幾種匯出方式</title><link>https://ulagraphy.netlify.com/post/programming-golang-sql-query/golang-sql-query/</link><pubDate>Tue, 19 Apr 2022 21:19:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-golang-sql-query/golang-sql-query/</guid><description>&lt;p>簡易紀錄一下 sql query 回傳(印出)查詢結果的三種不同方法，三種方式回傳的格式都差不多，只是型態可能不一樣。本文使用的 database 是 Oracle。&lt;/p></description></item><item><title>[Python &amp; Golang] Selenium Screenshot to the Specific Area</title><link>https://ulagraphy.netlify.com/post/programming-python-golang-selenium-screenshot-specific-area/screenshot-specific-area-by-selenium/</link><pubDate>Wed, 26 Jan 2022 17:46:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-python-golang-selenium-screenshot-specific-area/screenshot-specific-area-by-selenium/</guid><description>&lt;p>本篇文章紀錄如何使用 python 以及 golang 改寫的 selenium，螢幕截圖指定網址的特定範圍並存成圖片。&lt;/p></description></item><item><title>[Docker] 包 Selenium Chrome Docker Image</title><link>https://ulagraphy.netlify.com/post/devops-selenium-chrome-docker-img/build-selenium-chrome-docker-image/</link><pubDate>Mon, 24 Jan 2022 17:27:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-selenium-chrome-docker-img/build-selenium-chrome-docker-image/</guid><description>&lt;p>紀錄一下把 golang 改寫的 selenium 爬蟲程式包成 docker image 遇到的問題。&lt;/p></description></item><item><title>[golang] 使用 tebeka selenium 爬蟲模擬操控網頁</title><link>https://ulagraphy.netlify.com/post/programming-golang-tebeka-selenium/golang-tebeka-selenium/</link><pubDate>Mon, 10 Jan 2022 16:03:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-golang-tebeka-selenium/golang-tebeka-selenium/</guid><description>&lt;p>最近碰到一個需從網頁去擷取圖片的需求，原本拿到的 sample code 是由 python 的 selenium 爬的，但後來發現有大神將此包改寫成 golang
&lt;a href="https://github.com/tebeka/selenium" title="tebeka/selenium" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
tebeka/selenium
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>，所以就試著改寫看看，在此紀錄一下。&lt;/p></description></item><item><title>[golang] go mod replace 解决 fork repo 匯入問題</title><link>https://ulagraphy.netlify.com/post/programming-golang-mod-replace-for-fork-repo/go-mod-replace-fork-repo/</link><pubDate>Thu, 06 Jan 2022 14:10:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-golang-mod-replace-for-fork-repo/go-mod-replace-fork-repo/</guid><description>&lt;p>開發程式時使用 github 上各大神開發的第三方套件，有時候有自己的額外需求需要進行改造，所以 fork 到自己的 github 修改後，再 import 到自己的專案中。但當在進行構建的時候，報錯如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-v" data-lang="v">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span>&lt;span style="color:#66d9ef">go&lt;/span> get: github.com&lt;span style="color:#f92672">/&lt;/span>bbb&lt;span style="color:#f92672">/&lt;/span>xxx&lt;span style="color:#f92672">@&lt;/span>v1&lt;span style="color:#ae81ff">.0.2&lt;/span>: parsing &lt;span style="color:#66d9ef">go&lt;/span>.mod:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span> &lt;span style="color:#f92672">module&lt;/span> declares its path &lt;span style="color:#66d9ef">as&lt;/span>: github.com&lt;span style="color:#f92672">/&lt;/span>aaa&lt;span style="color:#f92672">/&lt;/span>xxx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>&lt;span> but was required &lt;span style="color:#66d9ef">as&lt;/span>: github.com&lt;span style="color:#f92672">/&lt;/span>bbb&lt;span style="color:#f92672">/&lt;/span>xxx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>為 Notepad++ 加上 golang 語法高亮</title><link>https://ulagraphy.netlify.com/post/programming-golang-notepad-highlight/golang-highlight-on-notepad/</link><pubDate>Wed, 05 Jan 2022 21:05:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-golang-notepad-highlight/golang-highlight-on-notepad/</guid><description>&lt;p>原生 Notepad++ 沒有支援 golang 的語法，在此紀錄一下要怎麼在 Notepad 中加入自定義的 golang 程式語言的語法高亮(使用暗黑模式 Obsidian)。目前 notepad 使用的版本為 v8.1.9.3。&lt;/p></description></item><item><title>[Docker] 建立 golang 中使用到 oracle instant client 的 image</title><link>https://ulagraphy.netlify.com/post/devops-build-golang-and-oracle-instant-client-img/build-golang-and-oracle-instant-client-docker-image/</link><pubDate>Tue, 07 Sep 2021 22:05:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/devops-build-golang-and-oracle-instant-client-img/build-golang-and-oracle-instant-client-docker-image/</guid><description>&lt;p>紀錄一下建立的過程中總共遇到兩個問題：&lt;/p></description></item><item><title>[Golang] Function</title><link>https://ulagraphy.netlify.com/post/programming-golang-function/golang-function/</link><pubDate>Sat, 04 Jan 2020 20:02:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-golang-function/golang-function/</guid><description>&lt;h2 id="introduction">Introduction
&lt;a class="header-anchor" href="#introduction">&lt;/a>
&lt;/h2>&lt;p>在 Go 裡，function 是一等公民，它可以作為另一 function 中的參數傳遞、可以將它指派給一變數、也可以在另一個 function 中當作 return 值。&lt;/p>
&lt;p>函式可以具名也可以匿名(anonynous function)；&lt;/p></description></item><item><title>[Golang] Array v.s. Slice</title><link>https://ulagraphy.netlify.com/post/golang-array-and-slice/golang-array-and-slice/</link><pubDate>Mon, 30 Dec 2019 20:41:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/golang-array-and-slice/golang-array-and-slice/</guid><description>&lt;h2 id="array">Array
&lt;a class="header-anchor" href="#array">&lt;/a>
&lt;/h2>&lt;p>陣列的長度固定，且為陣列類型的一部份。
（&lt;code>[4]int&lt;/code> 以及 &lt;code>[5]int&lt;/code> 為兩種獨立且不相容的不同type）&lt;/p>
&lt;h3 id="宣告及初始化array">宣告及初始化array
&lt;a class="header-anchor" href="#%e5%ae%a3%e5%91%8a%e5%8f%8a%e5%88%9d%e5%a7%8b%e5%8c%96array">&lt;/a>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>&lt;span>&lt;span style="color:#75715e">// var [len]Type，無初始化值，則初始值為zero value
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">arr1&lt;/span> [&lt;span style="color:#ae81ff">2&lt;/span>]&lt;span style="color:#66d9ef">int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span>&lt;span>&lt;span style="color:#75715e">// var [len]Type，並給初始值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span>&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">arr2&lt;/span> = [&lt;span style="color:#ae81ff">2&lt;/span>]&lt;span style="color:#66d9ef">int&lt;/span>{&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span>&lt;span>&lt;span style="color:#75715e">// var [...]Type，讓complier自行計算長度
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span>&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">arr3&lt;/span> = [&lt;span style="color:#f92672">...&lt;/span>]&lt;span style="color:#66d9ef">int&lt;/span>{&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span>&lt;span>&lt;span style="color:#75715e">// := [len]Type，在func中使用簡短宣告符號，無給初始值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span>&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">arr4&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> [&lt;span style="color:#ae81ff">2&lt;/span>]&lt;span style="color:#66d9ef">int&lt;/span>{}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span>&lt;span>&lt;span style="color:#75715e">// := [len]Type，並給初始值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15&lt;/span>&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">arr5&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> [&lt;span style="color:#ae81ff">2&lt;/span>]&lt;span style="color:#66d9ef">int&lt;/span>{}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17&lt;/span>&lt;span>&lt;span style="color:#75715e">// := [...]Type，讓complier自行計算長度
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18&lt;/span>&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">arr6&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> [&lt;span style="color:#f92672">...&lt;/span>]&lt;span style="color:#66d9ef">int&lt;/span>{&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[Golang] Method</title><link>https://ulagraphy.netlify.com/post/programming-golang-method/golang-method/</link><pubDate>Sun, 29 Dec 2019 05:06:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-golang-method/golang-method/</guid><description>&lt;style type="text/css">.notice{--root-color:#444;--root-background:#eff;--title-color:#fff;--title-background:#7bd;--warning-title:#c33;--warning-content:#fee;--info-title:#fb7;--info-content:#fec;--note-title:#6be;--note-content:#e7f2fa;--tip-title:#5a5;--tip-content:#efe}@media (prefers-color-scheme:dark){.notice{--root-color:#ddd;--root-background:#eff;--title-color:#fff;--title-background:#7bd;--warning-title:#800;--warning-content:#400;--info-title:#a50;--info-content:#420;--note-title:#069;--note-content:#023;--tip-title:#363;--tip-content:#121}}body.dark .notice{--root-color:#ddd;--root-background:#eff;--title-color:#fff;--title-background:#7bd;--warning-title:#800;--warning-content:#400;--info-title:#a50;--info-content:#420;--note-title:#069;--note-content:#023;--tip-title:#363;--tip-content:#121}.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:var(--root-color);background:var(--root-background)}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:var(--title-color);background:var(--title-background)}.notice.warning .notice-title{background:var(--warning-title)}.notice.warning{background:var(--warning-content)}.notice.info .notice-title{background:var(--info-title)}.notice.info{background:var(--info-content)}.notice.note .notice-title{background:var(--note-title)}.notice.note{background:var(--note-content)}.notice.tip .notice-title{background:var(--tip-title)}.notice.tip{background:var(--tip-content)}.icon-notice{display:inline-flex;align-self:center;margin-right:8px}.icon-notice img,.icon-notice svg{height:1em;width:1em;fill:currentColor}.icon-notice img,.icon-notice.baseline svg{top:.125em;position:relative}&lt;/style>
&lt;div>&lt;svg width="0" height="0" display="none" xmlns="http://www.w3.org/2000/svg">&lt;symbol id="tip-notice" viewBox="0 0 512 512" preserveAspectRatio="xMidYMid meet">&lt;path d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"/>&lt;/symbol>&lt;symbol id="note-notice" viewBox="0 0 512 512" preserveAspectRatio="xMidYMid meet">&lt;path d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"/>&lt;/symbol>&lt;symbol id="warning-notice" viewBox="0 0 576 512" preserveAspectRatio="xMidYMid meet">&lt;path d="M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"/>&lt;/symbol>&lt;symbol id="info-notice" viewBox="0 0 512 512" preserveAspectRatio="xMidYMid meet">&lt;path d="M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z"/>&lt;/symbol>&lt;/svg>&lt;/div>&lt;div class="notice info" >
&lt;p class="first notice-title">&lt;span class="icon-notice baseline">&lt;svg>&lt;use href="#info-notice">&lt;/use>&lt;/svg>&lt;/span>Info&lt;/p>&lt;p>Golang is all about TYPE!&lt;/p>&lt;/div>
&lt;h2 id="定義">定義
&lt;a class="header-anchor" href="#%e5%ae%9a%e7%be%a9">&lt;/a>
&lt;/h2>&lt;p>method是一個額外帶有receiver(接收器)的fuction，receiver為某type的變量，而type的型態可以是struct或是non-struct&lt;/p></description></item></channel></rss>