<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Javascript on UlaGraphy</title><link>https://ulagraphy.netlify.com/tags/javascript/</link><description>Recent content in Javascript on UlaGraphy</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 27 Jun 2020 13:39:00 +0000</lastBuildDate><atom:link href="https://ulagraphy.netlify.com/tags/javascript/rss.xml" rel="self" type="application/rss+xml"/><item><title>[Javascript] ES6 新語法 &amp; babel 轉譯器簡介</title><link>https://ulagraphy.netlify.com/post/programming-js-es6-and-babel/js-es6-and-babel/</link><pubDate>Sat, 27 Jun 2020 13:39:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-js-es6-and-babel/js-es6-and-babel/</guid><description>&lt;h2 id="ecmascript">ECMAScript
&lt;a class="header-anchor" href="#ecmascript">&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://zh.wikipedia.org/wiki/ECMAScript" title="ECMAScript" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
ECMAScript
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>是一個開發標準(規範)，而 Javascript 就是根據此標準來實作。
ES6 指的是 ECMAScript 第六版，於 2015 年發布，所以又稱 ES2015。ES6 包含了許多新的語法，將於下面用 Javascript 介紹。&lt;/p></description></item><item><title>[Javascript] 函式、內建函式</title><link>https://ulagraphy.netlify.com/post/programming-js-basic-3/js-basic-3/</link><pubDate>Wed, 17 Jun 2020 22:35:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-js-basic-3/js-basic-3/</guid><description>&lt;h2 id="函式-functiton">函式 functiton
&lt;a class="header-anchor" href="#%e5%87%bd%e5%bc%8f-functiton">&lt;/a>
&lt;/h2>&lt;p>基本函式結構&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">函式名稱&lt;/span>(&lt;span style="color:#a6e22e">參數&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">回傳值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>傳入參數可以一個或多個，可以是值、變數、陣列、物件或是函式&lt;/li>
&lt;li>回傳值可以零個或一個，可以是一個值、變數、陣列、物件或是函式&lt;/li>
&lt;li>呼叫函式直接打 &lt;code>函式名稱()&lt;/code> ；如果有帶參數，將引數置於括號中 &lt;code>函式名稱(引數)&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>[Javascript] 條件句、迴圈</title><link>https://ulagraphy.netlify.com/post/programming-js-basic-2/js-basic-2/</link><pubDate>Wed, 17 Jun 2020 22:23:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-js-basic-2/js-basic-2/</guid><description>&lt;h2 id="ifelse-statement">if/else statement
&lt;a class="header-anchor" href="#ifelse-statement">&lt;/a>
&lt;/h2>&lt;p>使用 if/else 來判斷狀況，用法如下：&lt;/p>
&lt;h3 id="if">if&amp;hellip;
&lt;a class="header-anchor" href="#if">&lt;/a>
&lt;/h3>&lt;p>可加入運算於判斷條件句內&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">num&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">13&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span>&lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#a6e22e">num&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;num is multiple of five&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span>&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[Javascript] runtime、運算子、變數</title><link>https://ulagraphy.netlify.com/post/programming-js-basic-1/js-basic-1/</link><pubDate>Tue, 16 Jun 2020 19:03:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-js-basic-1/js-basic-1/</guid><description>&lt;h2 id="javascript-runtime">Javascript Runtime
&lt;a class="header-anchor" href="#javascript-runtime">&lt;/a>
&lt;/h2>&lt;p>Javascript 需要有執行環境（Runtime）才能執行，最早期只能跑在瀏覽器上面，我們會透過 Javasrcipt 去操控瀏覽器畫面上的東西，例如表單驗證… 等等。&lt;br>
但 &lt;strong>Node.js&lt;/strong> 誕生後，就可以當成是 JS 除了瀏覽器外的 runtime，下載 Node.js 後便可以直接在 CMD 內下指令&lt;/p>
&lt;p>&lt;code>$ node &amp;lt; fileName.js &amp;gt;&lt;/code>&lt;/p></description></item><item><title>[Javascript] Debugging in Chrome</title><link>https://ulagraphy.netlify.com/post/programming-js-debugging-in-chrome/js-debugging-in-chrome/</link><pubDate>Sun, 12 Apr 2020 21:13:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/programming-js-debugging-in-chrome/js-debugging-in-chrome/</guid><description>&lt;p>Debugging 是指在一個腳本中找出錯誤。市面上大宗瀏覽器都支持開發人員工具，能幫助開發者一步步地追蹤代碼，查看當前實際運行情況。
此篇文章以常用的 Google Chrome 做說明－&lt;/p></description></item></channel></rss>