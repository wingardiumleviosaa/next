<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kafka on UlaGraphy</title><link>https://ulagraphy.netlify.com/tags/kafka/</link><description>Recent content in Kafka on UlaGraphy</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 22 Mar 2022 14:21:00 +0000</lastBuildDate><atom:link href="https://ulagraphy.netlify.com/tags/kafka/rss.xml" rel="self" type="application/rss+xml"/><item><title>Debezium 1.5 snapshot.mode schema_only not work</title><link>https://ulagraphy.netlify.com/post/data-debezium-1.5-snapshot-mode-schema-only-not-work/debezium-snapshot-mode-schema-only-not-work/</link><pubDate>Tue, 22 Mar 2022 14:21:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-debezium-1.5-snapshot-mode-schema-only-not-work/debezium-snapshot-mode-schema-only-not-work/</guid><description>&lt;p>使用 Debezium 1.5 連上 connector 後，發現資料會從資料表的最舊資料一筆資料開始送，查官網後發現有 &lt;code>snapshot.mode&lt;/code> 的參數可以設置，但設置完畢後卻發現有 error，本篇記錄解法。&lt;/p></description></item><item><title>安裝監聽於所有 namespace 的 strimzi kafka operator, 便於在不同 namespace 下安裝不同座 Kafka cluster</title><link>https://ulagraphy.netlify.com/post/data-install-strimzi-kafka-operator-to-watch-all-namespace/install-strimzi-kafka-operator-to-watch-all-namespace/</link><pubDate>Mon, 21 Mar 2022 22:33:25 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-install-strimzi-kafka-operator-to-watch-all-namespace/install-strimzi-kafka-operator-to-watch-all-namespace/</guid><description>&lt;p>以下紀錄如何隔離 kafka operator 與建立的 kafka cluster 的命名空間，預計是可以在一座 kubernetes cluster 上只需安裝一個 kafka operator 來建立多個 kafka cluster。&lt;/p></description></item><item><title>使用 docker compose 安裝 kafka</title><link>https://ulagraphy.netlify.com/post/data-install-kafka-by-docker-compose/install-kafka-by-docker-compose/</link><pubDate>Wed, 09 Mar 2022 21:54:12 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-install-kafka-by-docker-compose/install-kafka-by-docker-compose/</guid><description>&lt;h2 id="安裝單節點-kafka">安裝單節點 Kafka
&lt;a class="header-anchor" href="#%e5%ae%89%e8%a3%9d%e5%96%ae%e7%af%80%e9%bb%9e-kafka">&lt;/a>
&lt;/h2>&lt;h3 id="1-準備-docker-composeyaml-檔案">1. 準備 docker-compose.yaml 檔案
&lt;a class="header-anchor" href="#1-%e6%ba%96%e5%82%99-docker-composeyaml-%e6%aa%94%e6%a1%88">&lt;/a>
&lt;/h3></description></item><item><title>[nifi] Consume Kafka Topic and Put to MongoDB</title><link>https://ulagraphy.netlify.com/post/data-nifi-consume-kafka-and-put-to-mongodb/nifi-consume-kafka/</link><pubDate>Fri, 03 Sep 2021 15:13:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-nifi-consume-kafka-and-put-to-mongodb/nifi-consume-kafka/</guid><description>&lt;p>這個範例將示範消費指定的 kafka topic，並寫進指定的 MongoDB。&lt;/p></description></item><item><title>[Kafka] server - client &amp; client - server SSL 加密</title><link>https://ulagraphy.netlify.com/post/data-kafka-ssl-encryption/kafka-ssl-encryption/</link><pubDate>Fri, 04 Sep 2020 12:00:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-kafka-ssl-encryption/kafka-ssl-encryption/</guid><description>&lt;p>Kafka 目前支持 SSL、SASL/Kerberos、SASL/PLAIN 三種認證機制，這篇文章將紀錄如何在 Kafka broker 與 clinet 端建立 TLS/SSL 連線。&lt;/p></description></item><item><title>[Kafka] 新增 broker 節點並平衡 topic</title><link>https://ulagraphy.netlify.com/post/data-kafka-topic-rebalancing/kafka-add-broker-and-balance-topic/</link><pubDate>Mon, 24 Aug 2020 14:10:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-kafka-topic-rebalancing/kafka-add-broker-and-balance-topic/</guid><description>&lt;p>在 Kafka 集群中增加 broker 非常方便，只需為其分配唯一的 broker ID，指定集群使用的 zookeeper connect 位址，然後在新服務器上啟動 Kafka。但是，&lt;strong>舊有的 Topic 不會將 Partition 均勻分配到新的節點上，進而造成數據不平衡。&lt;/strong> 因此需要將一些現有數據遷移到這些新機器上進行 rebalancing。&lt;/p>
&lt;p>Kafka 提供了 &lt;code>kafka-reassign-partitions.sh&lt;/code> 工具來進行手動平均分配：&lt;/p></description></item><item><title>[Kafka] 建立 Kafka Cluster</title><link>https://ulagraphy.netlify.com/post/data-kafka-cluster/kafka-cluster/</link><pubDate>Wed, 10 Jun 2020 20:52:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-kafka-cluster/kafka-cluster/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span>$ cd /opt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span>$ wget &lt;span style="color:#e6db74">&amp;#34;http://ftp.tc.edu.tw/pub/Apache/kafka/2.4.1/kafka_2.12-2.4.1.tgz&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>&lt;span>$ sudo tar zxvf kafka_2.12-2.4.1.tgz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span>&lt;span>$ sudo mv kafka_2.12-2.4.1 kafka
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[Kafka] Kafka at a Glance</title><link>https://ulagraphy.netlify.com/post/data-kafka-intro/kafka-at-glance/</link><pubDate>Tue, 09 Jun 2020 10:43:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-kafka-intro/kafka-at-glance/</guid><description>&lt;p>Kafka 是由 LinkedIn 開發而後釋出給 Apache 的一個開源 streaming message queue (消息佇列)，由Scala和Java編寫，目前是 Hadoop ecosystem 中的一員。&lt;/p></description></item></channel></rss>