<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Zookeeper on UlaGraphy</title><link>https://ulagraphy.netlify.com/tags/zookeeper/</link><description>Recent content in Zookeeper on UlaGraphy</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 30 Aug 2020 10:10:00 +0000</lastBuildDate><atom:link href="https://ulagraphy.netlify.com/tags/zookeeper/rss.xml" rel="self" type="application/rss+xml"/><item><title>[Zookeeper] Encryption - node-node &amp; client-node</title><link>https://ulagraphy.netlify.com/post/data-zookeeper-encryption3/zookeeper-encryption-3/</link><pubDate>Sun, 30 Aug 2020 10:10:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-zookeeper-encryption3/zookeeper-encryption-3/</guid><description>&lt;h2 id="node-node-encryption">Node-Node Encryption
&lt;a class="header-anchor" href="#node-node-encryption">&lt;/a>
&lt;/h2>&lt;p>節點到節點加密使用 SSL 保護 ZooKeeper server 間的內部連接，加密完全在 ZooKeeper 節點之間完成。默認情況下，Quorom TLS 是禁用的，必須通過編輯所有 server 中的 &lt;code>zoo.cfg&lt;/code> 文件來啟用：&lt;/p></description></item><item><title>[Zookeeper] Encryption - 產生 CA-signed 金鑰</title><link>https://ulagraphy.netlify.com/post/data-zookeeper-encryption2/zookeeper-encryption-2/</link><pubDate>Sun, 30 Aug 2020 09:47:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-zookeeper-encryption2/zookeeper-encryption-2/</guid><description>&lt;h2 id="產生-ca-加簽金鑰">產生 CA 加簽金鑰
&lt;a class="header-anchor" href="#%e7%94%a2%e7%94%9f-ca-%e5%8a%a0%e7%b0%bd%e9%87%91%e9%91%b0">&lt;/a>
&lt;/h2>&lt;ol>
&lt;li>產生 CA 金鑰憑證
在隨意一台機器上產生 CA 憑證，用於為其他金鑰加簽。&lt;/li>
&lt;/ol></description></item><item><title>[Zookeeper] Encryption - 產生 self-signed 金鑰</title><link>https://ulagraphy.netlify.com/post/data-zookeeper-encryption1/zookeeper-encryption-1/</link><pubDate>Sun, 30 Aug 2020 09:38:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-zookeeper-encryption1/zookeeper-encryption-1/</guid><description>&lt;p>Netty 是一個基於 NIO 的 client/server 通信框架，它通過直接使用 NIO 簡化了 Java 應用程序的 network level 通信的複雜度。 此外，Netty 框架內置了對加密（SSL）和身份驗證（CA）的支持。 這些是可選功能，可以單獨打開或關閉。&lt;/p></description></item><item><title>[Zookeeper] Dynamic Configuration</title><link>https://ulagraphy.netlify.com/post/data-zookeeper-dynamic-configuration/zookeeper-dynamic-configuration/</link><pubDate>Wed, 12 Aug 2020 22:10:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-zookeeper-dynamic-configuration/zookeeper-dynamic-configuration/</guid><description>&lt;p>Zookeeper 在 3.5.0 版發行後，支持動態新增節點，不需將整個集群重啟。這篇文章主要紀錄 dymamic configuration 如何實作。&lt;/p></description></item><item><title>[Zookeeper] ACL</title><link>https://ulagraphy.netlify.com/post/data-zookeeper-acl/zookeeper-acl/</link><pubDate>Wed, 12 Aug 2020 20:45:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-zookeeper-acl/zookeeper-acl/</guid><description>&lt;h2 id="aclaccess-control-list">ACL(Access Control List)
&lt;a class="header-anchor" href="#aclaccess-control-list">&lt;/a>
&lt;/h2>&lt;p>Zookeeper 對 znode 操作採用 ACL 進行了存取權限控制，類似於UNIX/Linux的文件權限機制。使用 scheme:id:perm 來標識，主要涵蓋 3 個方面：&lt;/p></description></item><item><title>[Zookeeper] fsync &amp; EndOfStreamException 導致 zookeeper shutdown</title><link>https://ulagraphy.netlify.com/post/data-zookeeper-endofstreamexception-error/zookeeper-endofstreamexception/</link><pubDate>Fri, 31 Jul 2020 14:50:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-zookeeper-endofstreamexception-error/zookeeper-endofstreamexception/</guid><description>&lt;h2 id="問題">問題
&lt;a class="header-anchor" href="#%e5%95%8f%e9%a1%8c">&lt;/a>
&lt;/h2>&lt;p>Zookeeper 及 Kafka 在參數保持預設的狀況下，做壓力測試時 Zookeeper 會發生以下錯誤訊息：&lt;/p></description></item><item><title>[Zookeeper] 建立 Zookeeper Cluster</title><link>https://ulagraphy.netlify.com/post/data-build-zookeeper-cluster/zookeeper-build-cluster/</link><pubDate>Thu, 30 Apr 2020 20:55:00 +0000</pubDate><guid>https://ulagraphy.netlify.com/post/data-build-zookeeper-cluster/zookeeper-build-cluster/</guid><description>&lt;p>Zookeeper 提供分散式應用程式中的協調服務，是 Hadoop 生態系產品中不可或缺的角色。
Zookeeper 叢集適合搭建在奇數臺機器上，目的是為了提高可用性以及維持選舉制度的運行。[1]&lt;/p></description></item></channel></rss>